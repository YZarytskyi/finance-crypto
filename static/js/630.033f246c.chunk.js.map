{"version":3,"file":"static/js/630.033f246c.chunk.js","mappings":"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","sources":["Components/Common/TablePagination.tsx","Components/Crypto/CryptoSkeleton.tsx","Components/Crypto/Exchanges/TableBody.tsx","Components/Crypto/Exchanges/Exchanges.tsx","webpack://crypto-project/./src/Components/Crypto/NavCrypto.module.scss?f0af","Components/Crypto/NavCrypto.tsx","../node_modules/react-bootstrap/esm/ProgressBar.js","../node_modules/react-bootstrap/esm/Table.js","webpack://crypto-project/./src/Components/Crypto/Exchanges/Exchanges.module.scss?0877"],"sourcesContent":["import Pagination from '@mui/material/Pagination';\r\n\r\n\r\ninterface TablePaginationProps {\r\n  page: number;\r\n  setPage: (e: number) => void;\r\n  count: number;\r\n}\r\n\r\nconst TablePagination: React.FC<TablePaginationProps> = ({page, setPage, count}) => {\r\n  const handleChange = (event: React.ChangeEvent<unknown>, page: number) => {\r\n    setPage(page)\r\n  }\r\n  return (\r\n      <Pagination count={count} shape=\"rounded\" page={page} onChange={handleChange} style={{marginBottom: 15}}/>\r\n  );\r\n}\r\n\r\nexport default TablePagination;","import style from \"../Crypto/Exchanges/Exchanges.module.scss\";\r\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\n\r\n\r\nexport const CryptoSkeleton = () => {\r\n  return (\r\n    <>\r\n      <SkeletonTheme baseColor=\"#2c2b2b\" highlightColor=\"#4d4d4d\">\r\n        <div className={style.table} style={{marginBottom: -17, marginTop: -1}}>\r\n          <div>\r\n           <Skeleton height={50} width={'100%'} />\r\n          </div>\r\n        </div>\r\n      </SkeletonTheme>\r\n      <SkeletonTheme baseColor=\"#121212\" highlightColor=\"#262626\">\r\n        <div className={style.table} style={{marginBottom: 15}}>\r\n          <div>\r\n           <Skeleton count={15} height={53} width={'100%'} />\r\n          </div>\r\n        </div>\r\n      </SkeletonTheme>\r\n    </>\r\n  );\r\n};","import ProgressBar from \"react-bootstrap/ProgressBar\";\r\nimport { useAppSelector } from \"../../../Store/hooks\";\r\nimport { setNumberFormat } from \"../../../utils/utils\";\r\n\r\nconst TableExchangesBody = () => {\r\n  const exchanges = useAppSelector((state) => state.crypto.exchanges);\r\n\r\n  return (\r\n    <>\r\n      {exchanges.map((item) => (\r\n        <tr key={item.id}>\r\n          <td>{item.trust_score_rank}</td>\r\n          <td>\r\n            <div>\r\n              {item.id === \"kraken\" ? (\r\n                <>\r\n                  <a\r\n                    href=\"https://www.kraken.com/en-us\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer nofollow\"\r\n                  >\r\n                    <img src={item.image} alt={item.name} />\r\n                  </a>\r\n                  <a\r\n                    href=\"https://www.kraken.com/en-us\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer nofollow\"\r\n                  >\r\n                    {item.name}\r\n                  </a>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <a\r\n                    href={item.url}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer nofollow\"\r\n                  >\r\n                    <img src={item.image} alt={item.name} />\r\n                  </a>\r\n                  <a\r\n                    href={item.url}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer nofollow\"\r\n                  >\r\n                    {item.name}\r\n                  </a>\r\n                </>\r\n              )}\r\n            </div>\r\n          </td>\r\n          <td>\r\n            <div>\r\n              <ProgressBar now={item.trust_score} min={1} max={10} />\r\n              {item.trust_score}\r\n            </div>\r\n          </td>\r\n          <td>{setNumberFormat(item.trade_volume_24h_btc)}&nbsp;BTC</td>\r\n          <td>{item.year_established || \"Unknown\"}</td>\r\n          <td>{item.country || \"Unknown\"}</td>\r\n        </tr>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TableExchangesBody;\r\n","import style from './Exchanges.module.scss'\r\nimport { useEffect, useState } from 'react';\r\nimport NavCrypto from \"../NavCrypto\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport TableExchangesBody from './TableBody';\r\nimport {fetchExchanges} from '../../../Store/Reducers/cryptoSlice'\r\nimport { useAppDispatch, useAppSelector } from '../../../Store/hooks';\r\nimport TablePagination from '../../Common/TablePagination';\r\nimport { CryptoSkeleton } from '../CryptoSkeleton';\r\n\r\n\r\nconst Exchanges = () => {\r\n  const dispatch = useAppDispatch()\r\n  const [page, setPage] = useState<number>(1)\r\n  const isLoading = useAppSelector(state => state.crypto.isLoadingCrypto)\r\n  const countExchanges: number = 30;\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchExchanges(page))\r\n  }, [page])\r\n\r\n  return(\r\n    <>\r\n      <NavCrypto />\r\n      {isLoading\r\n      ? <CryptoSkeleton />\r\n      : <section className={`${style.table} ${style.tableExchanges}`}>\r\n      <Table\r\n        hover\r\n        variant=\"dark\"\r\n      >\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Exchange</th>\r\n            <th>Trust Score</th>\r\n            <th>Total&nbsp;Volume 24h</th>\r\n            <th>Year Established</th>\r\n            <th>Country</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <TableExchangesBody />\r\n        </tbody>\r\n      </Table>\r\n      </section>\r\n      }\r\n      <div className={style.pagination}>\r\n        <TablePagination page={page} setPage={setPage} count={countExchanges} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Exchanges;","// extracted by mini-css-extract-plugin\nexport default {\"iconTime\":\"NavCrypto_iconTime__lIDAW\",\"hidden\":\"NavCrypto_hidden__tSxDl\",\"container\":\"NavCrypto_container__rXDY7\",\"navCrypto\":\"NavCrypto_navCrypto__3v0Sl\",\"listLeft\":\"NavCrypto_listLeft__ButfR\",\"leftLink\":\"NavCrypto_leftLink__cYu5N\",\"arrow\":\"NavCrypto_arrow__ADYsT\",\"home\":\"NavCrypto_home__luzbS\",\"currentPath\":\"NavCrypto_currentPath__hhsNq\",\"listCenter\":\"NavCrypto_listCenter__ZwodD\"};","import style from \"./NavCrypto.module.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport sprite from \"../../assets/images/icons.svg\";\r\n\r\nconst NavCrypto = () => {\r\n  let currentPath = window.location.hash;\r\n  const regexpCoins = /#\\/crypto\\//i;\r\n  const regexpSelectedCoin = /#\\/crypto\\/coins\\//i;\r\n  const isSelectedCoin = regexpSelectedCoin.test(currentPath);\r\n  currentPath = currentPath.replace(\r\n    isSelectedCoin ? regexpSelectedCoin : regexpCoins,\r\n    \"\"\r\n  );\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <div className={style.navCrypto}>\r\n        <ul className={style.listLeft}>\r\n          <li>\r\n            <NavLink to=\"/\" className={style.leftLink}>\r\n              <svg className={style.home}>\r\n                <use href={sprite + \"#home\"} />\r\n              </svg>\r\n              <svg className={style.arrow}>\r\n                <use href={sprite + \"#arrow_right\"} />\r\n              </svg>\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/crypto/coins\" className={style.leftLink}>\r\n              Crypto\r\n              <svg className={style.arrow}>\r\n                <use href={sprite + \"#arrow_right\"} />\r\n              </svg>\r\n            </NavLink>\r\n          </li>\r\n          <li className={isSelectedCoin ? \"\" : \"hidden\"}>\r\n            <NavLink to=\"/crypto/coins\" className={style.leftLink}>\r\n              Coins\r\n              <svg className={style.arrow}>\r\n                <use href={sprite + \"#arrow_right\"} />\r\n              </svg>\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <span className={style.currentPath}>{currentPath}</span>\r\n          </li>\r\n        </ul>\r\n        <ul className={style.listCenter}>\r\n          <li>\r\n            <NavLink to=\"/crypto/coins\" className={style.centerLink}>\r\n              Coins\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/crypto/exchanges\" className={style.centerLink}>\r\n              Exchanges\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/crypto/arbitrage\" className={style.centerLink}>\r\n              Arbitrage\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/crypto/converter\" className={style.centerLink}>\r\n              Converter\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavCrypto;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\n\nconst defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  visuallyHidden: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\n\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild,\n  ...props\n}, ref) => {\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","// extracted by mini-css-extract-plugin\nexport default {\"iconTime\":\"Exchanges_iconTime__O+brY\",\"hidden\":\"Exchanges_hidden__wk9Z3\",\"table\":\"Exchanges_table__Ptihv\",\"tableCoins\":\"Exchanges_tableCoins__Bf9kP\",\"link\":\"Exchanges_link__0jQEJ\",\"percentagePlus\":\"Exchanges_percentagePlus__776n7\",\"percentageMinus\":\"Exchanges_percentageMinus__WItqE\",\"pagination\":\"Exchanges_pagination__uRWVE\",\"tableExchanges\":\"Exchanges_tableExchanges__6oeNP\"};"],"names":["page","setPage","count","shape","onChange","event","style","marginBottom","CryptoSkeleton","baseColor","highlightColor","className","marginTop","height","width","exchanges","useAppSelector","state","crypto","map","item","trust_score_rank","id","href","target","rel","src","image","alt","name","url","ProgressBar","now","trust_score","min","max","setNumberFormat","trade_volume_24h_btc","year_established","country","dispatch","useAppDispatch","useState","isLoading","isLoadingCrypto","useEffect","fetchExchanges","NavCrypto","Table","hover","variant","TablePagination","currentPath","window","location","hash","regexpSelectedCoin","isSelectedCoin","test","replace","to","sprite","getPercentage","percentage","Math","round","renderProgressBar","ref","label","visuallyHidden","striped","animated","bsPrefix","props","_jsx","role","classNames","children","React","isChild","useBootstrapPrefix","wrapperProps","child","cloneElement","displayName","defaultProps","bordered","borderless","size","responsive","decoratedBsPrefix","classes","table","responsiveClass"],"sourceRoot":""}