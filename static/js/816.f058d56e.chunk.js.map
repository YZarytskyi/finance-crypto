{"version":3,"file":"static/js/816.f058d56e.chunk.js","mappings":"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","sources":["Components/Common/TablePagination.tsx","webpack://crypto-project/./src/Components/Crypto/Coins/Coins.module.scss?d27d","Components/Crypto/Coins/Chart.tsx","Components/Crypto/Coins/CoinsTableBodyItem.tsx","Components/Crypto/Coins/Coins.tsx","Components/Crypto/CryptoSkeleton.tsx","webpack://crypto-project/./src/Components/Crypto/NavCrypto.module.scss?f0af","Components/Crypto/NavCrypto.tsx","utils/utils.ts","../node_modules/react-bootstrap/esm/Table.js","webpack://crypto-project/./src/Components/Crypto/Exchanges/Exchanges.module.scss?0877"],"sourcesContent":["import Pagination from \"@mui/material/Pagination\";\r\nimport { forwardRef } from \"react\";\r\nimport { useAppDispatch } from \"../../Store/hooks\";\r\nimport { setCurrentPage } from \"../../Store/Reducers/articlesSlice\";\r\n\r\ninterface TablePaginationProps {\r\n  page: number;\r\n  setPage?: React.Dispatch<React.SetStateAction<number>>;\r\n  count: number;\r\n  articles?: true;\r\n}\r\n\r\nconst TablePagination = forwardRef<HTMLHeadingElement, TablePaginationProps>(\r\n  ({ page, setPage, count, articles }, ref) => {\r\n    const dispatch = useAppDispatch();\r\n\r\n    const executeScroll = (ref: HTMLHeadingElement) => {\r\n      ref.scrollIntoView({\r\n        behavior: \"smooth\",\r\n        block: \"start\",\r\n      });\r\n    };\r\n\r\n    const handleChange = (event: React.ChangeEvent<unknown>, page: number) => {\r\n      if (articles) {\r\n        dispatch(setCurrentPage(page - 1));\r\n      } else {\r\n        setPage && setPage(page);\r\n      }\r\n\r\n      if (ref) {\r\n        executeScroll((ref as React.MutableRefObject<HTMLHeadingElement>).current);\r\n      }\r\n    };\r\n    return (\r\n      <Pagination\r\n        count={count}\r\n        shape=\"rounded\"\r\n        page={page}\r\n        onChange={handleChange}\r\n        style={{ marginBottom: 15 }}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default TablePagination;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"iconTime\":\"Coins_iconTime__zJ4BK\",\"hidden\":\"Coins_hidden__02BC-\",\"percentagePlus\":\"Coins_percentagePlus__jkipC\",\"percentageMinus\":\"Coins_percentageMinus__VR4Pb\",\"table\":\"Coins_table__PR9uh\",\"tableCoins\":\"Coins_tableCoins__dbVk3\",\"link\":\"Coins_link__yAojc\",\"pagination\":\"Coins_pagination__-qiwy\"};","import Chart from \"react-apexcharts\";\r\nimport { ApexOptions } from \"apexcharts\";\r\n\r\ninterface ChartCoinsProps {\r\n  data: Array<number>;\r\n}\r\nconst ChartCoins: React.FC<ChartCoinsProps> = ({ data }) => {\r\n  const options: ApexOptions = {\r\n    chart: {\r\n      animations: {\r\n        enabled: false,\r\n      },\r\n      id: \"area-datetime\",\r\n      type: \"area\",\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n      sparkline: {\r\n        enabled: true,\r\n      },\r\n    },\r\n    grid: {\r\n      show: false,\r\n    },\r\n    fill: {\r\n      type: \"gradient\",\r\n      gradient: {\r\n        type: \"vertical\",\r\n        opacityFrom: 0.1,\r\n        opacityTo: 0.7,\r\n        stops: [0, 100],\r\n      },\r\n    },\r\n    tooltip: {\r\n      enabled: true,\r\n      theme: \"dark\",\r\n      style: {\r\n        fontSize: \"12px\",\r\n        fontFamily: undefined,\r\n      },\r\n      x: {\r\n        show: false,\r\n      },\r\n      y: {\r\n        formatter: function (value) {\r\n          if (value > 5) {\r\n            return value.toFixed(2);\r\n          }\r\n          return value.toFixed(5);\r\n        },\r\n        title: {\r\n          formatter: (seriesName) => \"$\",\r\n        },\r\n      },\r\n      marker: {\r\n        show: false,\r\n      },\r\n    },\r\n\r\n    xaxis: {\r\n      type: \"numeric\",\r\n      labels: {\r\n        show: false,\r\n      },\r\n    },\r\n    yaxis: {\r\n      show: false,\r\n    },\r\n    stroke: {\r\n      show: true,\r\n      curve: \"straight\",\r\n      width: 2,\r\n    },\r\n  };\r\n  const series = [\r\n    {\r\n      name: \"price\",\r\n      type: \"area\",\r\n      data: data,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Chart\r\n      options={options}\r\n      series={series}\r\n      type=\"line\"\r\n      width=\"100%\"\r\n      height=\"60px\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default ChartCoins;\r\n","import React from \"react\";\r\nimport style from \"./Coins.module.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport ChartCoins from \"./Chart\";\r\nimport { removeFloatNull, setNumberFormat } from \"../../../utils/utils\";\r\nimport { Markets } from \"../../../Types/Types\";\r\n\r\ninterface CoinsTableBodyItemProps {\r\n  coin: Markets;\r\n}\r\n\r\nconst CoinsTableBodyItem: React.FC<CoinsTableBodyItemProps> = ({ coin }) => {\r\n  const setClassName = (value: number) => {\r\n    return value > 0 ? style.percentagePlus : style.percentageMinus;\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <td>{coin.market_cap_rank}</td>\r\n      <td>\r\n        <NavLink to={`/crypto/coins/${coin.id}`} className={style.link}>\r\n          <img src={coin.image} alt={coin.name} height={30} width={30} />\r\n          <p>\r\n            {coin.name}\r\n            <span>{coin.symbol.toUpperCase()}</span>\r\n          </p>\r\n        </NavLink>\r\n      </td>\r\n      <td>{removeFloatNull(coin.current_price)} $</td>\r\n      <td className={setClassName(coin.price_change_percentage_1h_in_currency)}>\r\n        {coin.price_change_percentage_1h_in_currency?.toFixed(2)} %\r\n      </td>\r\n      <td\r\n        className={setClassName(coin.price_change_percentage_24h_in_currency)}\r\n      >\r\n        {coin.price_change_percentage_24h_in_currency?.toFixed(2)} %\r\n      </td>\r\n      <td className={setClassName(coin.price_change_percentage_7d_in_currency)}>\r\n        {coin.price_change_percentage_7d_in_currency?.toFixed(2)} %\r\n      </td>\r\n      <td>{setNumberFormat(coin.total_volume)} $</td>\r\n      <td>{setNumberFormat(coin.market_cap)} $</td>\r\n      <td>\r\n        <ChartCoins data={coin.sparkline_in_7d.price} />\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default React.memo(CoinsTableBodyItem);\r\n","import style from \"./Coins.module.scss\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport CoinsTableBodyItem from \"./CoinsTableBodyItem\";\r\nimport TablePagination from \"../../Common/TablePagination\";\r\nimport { fetchMarkets } from \"../../../Store/Reducers/cryptoSlice\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../Store/hooks\";\r\nimport NavCrypto from \"../NavCrypto\";\r\nimport { CryptoSkeleton } from \"../CryptoSkeleton\";\r\nimport SearchForm from \"../../Common/SearchForm\";\r\n\r\nconst Coins = () => {\r\n  const { isLoadingCrypto, markets } = useAppSelector((state) => state.crypto);\r\n  const dispatch = useAppDispatch();\r\n  const [page, setPage] = useState<number>(1);\r\n  const countCoins: number = 50;\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchMarkets(page));\r\n  }, [page]);\r\n\r\n  return (\r\n    <>\r\n      <NavCrypto />\r\n      <section className={`${style.table} ${style.tableCoins}`}>\r\n        <h1 className=\"hidden\">Cryptocurrencies</h1>\r\n        <Table hover variant=\"dark\">\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>\r\n                Coin\r\n                {/* <SearchForm\r\n                  page={page}\r\n                  fetch={fetchMarkets}\r\n                  component=\"coins\"\r\n                /> */}\r\n              </th>\r\n              <th>Price</th>\r\n              <th>1h</th>\r\n              <th>24h</th>\r\n              <th>7d</th>\r\n              <th>Total Volume</th>\r\n              <th>Market Capitalization</th>\r\n              <th>Last&nbsp;7&nbsp;days</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {isLoadingCrypto ? (\r\n              <CryptoSkeleton />\r\n            ) : (\r\n              <>\r\n                {markets.map((coin) => (\r\n                  <CoinsTableBodyItem coin={coin} key={coin.id} />\r\n                ))}\r\n              </>\r\n            )}\r\n          </tbody>\r\n        </Table>\r\n      </section>\r\n      <div className={style.pagination}>\r\n        <TablePagination page={page} setPage={setPage} count={countCoins} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Coins;\r\n","import style from \"../Crypto/Exchanges/Exchanges.module.scss\";\r\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\n\r\nexport const CryptoSkeleton = () => {\r\n  return (\r\n    <>\r\n      <SkeletonTheme baseColor=\"#121212\" highlightColor=\"#262626\">\r\n        <tr><td colSpan={9}><Skeleton height={55} width={\"100%\"} /></td></tr>\r\n        <tr><td colSpan={9}><Skeleton height={55} width={\"100%\"} /></td></tr>\r\n        <tr><td colSpan={9}><Skeleton height={55} width={\"100%\"} /></td></tr>\r\n        <tr><td colSpan={9}><Skeleton height={55} width={\"100%\"} /></td></tr>\r\n        <tr><td colSpan={9}><Skeleton height={55} width={\"100%\"} /></td></tr>\r\n        <tr><td colSpan={9}><Skeleton height={55} width={\"100%\"} /></td></tr>\r\n        <tr><td colSpan={9}><Skeleton height={55} width={\"100%\"} /></td></tr>\r\n        <tr><td colSpan={9}><Skeleton height={55} width={\"100%\"} /></td></tr>\r\n        <tr><td colSpan={9}><Skeleton height={55} width={\"100%\"} /></td></tr>\r\n        <tr><td colSpan={9}><Skeleton height={55} width={\"100%\"} /></td></tr>\r\n        <tr><td colSpan={9}><Skeleton height={55} width={\"100%\"} /></td></tr>\r\n        <tr><td colSpan={9}><Skeleton height={55} width={\"100%\"} /></td></tr>\r\n        <tr><td colSpan={9}><Skeleton height={55} width={\"100%\"} /></td></tr>\r\n        <tr><td colSpan={9}><Skeleton height={55} width={\"100%\"} /></td></tr>\r\n        <tr className={style.table} style={{ marginBottom: 15 }}>\r\n          <td colSpan={9}><Skeleton height={53} width={\"100%\"} /></td>\r\n        </tr>\r\n      </SkeletonTheme>\r\n    </>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"iconTime\":\"NavCrypto_iconTime__I4Vhv\",\"hidden\":\"NavCrypto_hidden__tN0cv\",\"percentagePlus\":\"NavCrypto_percentagePlus__eSklH\",\"percentageMinus\":\"NavCrypto_percentageMinus__1qsQk\",\"container\":\"NavCrypto_container__Wd1RQ\",\"navCrypto\":\"NavCrypto_navCrypto__C9pNy\",\"listLeft\":\"NavCrypto_listLeft__NSkYO\",\"leftLink\":\"NavCrypto_leftLink__Y2MD1\",\"arrow\":\"NavCrypto_arrow__v0AAw\",\"home\":\"NavCrypto_home__deF99\",\"currentPath\":\"NavCrypto_currentPath__sTRX4\",\"listCenter\":\"NavCrypto_listCenter__bfrWA\"};","import style from \"./NavCrypto.module.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport sprite from \"../../assets/images/icons.svg\";\r\n\r\nconst NavCrypto = () => {\r\n  let currentPath = window.location.hash;\r\n  const regexpCoins = /#\\/crypto\\//i;\r\n  const regexpSelectedCoin = /#\\/crypto\\/coins\\//i;\r\n  const isSelectedCoin = regexpSelectedCoin.test(currentPath);\r\n  currentPath = currentPath.replace(\r\n    isSelectedCoin ? regexpSelectedCoin : regexpCoins,\r\n    \"\"\r\n  );\r\n  currentPath = isSelectedCoin\r\n    ? currentPath.substring(0, 17) + (currentPath.length > 18 ? \"...\" : \"\")\r\n    : currentPath;\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <div className={style.navCrypto}>\r\n        <ul className={style.listLeft}>\r\n          <li>\r\n            <NavLink to=\"/\" className={style.leftLink}>\r\n              <svg className={style.home}>\r\n                <use href={sprite + \"#home\"} />\r\n              </svg>\r\n              <svg className={style.arrow}>\r\n                <use href={sprite + \"#arrow_right\"} />\r\n              </svg>\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/crypto/coins\" className={style.leftLink}>\r\n              Crypto\r\n              <svg className={style.arrow}>\r\n                <use href={sprite + \"#arrow_right\"} />\r\n              </svg>\r\n            </NavLink>\r\n          </li>\r\n          <li className={isSelectedCoin ? \"\" : style.hidden}>\r\n            <NavLink to=\"/crypto/coins\" className={style.leftLink}>\r\n              Coins\r\n              <svg className={style.arrow}>\r\n                <use href={sprite + \"#arrow_right\"} />\r\n              </svg>\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <span className={style.currentPath}>{currentPath}</span>\r\n          </li>\r\n        </ul>\r\n        <ul className={style.listCenter}>\r\n          <li>\r\n            <NavLink to=\"/crypto/coins\" className={style.centerLink}>\r\n              Coins\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/crypto/exchanges\" className={style.centerLink}>\r\n              Exchanges\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/crypto/arbitrage\" className={style.centerLink}>\r\n              Arbitrage\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/crypto/converter\" className={style.centerLink}>\r\n              Converter\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavCrypto;\r\n","export const setNumberFormat = (number: number): string => new Intl.NumberFormat(\"ua-UA\").format(number);\r\n\r\nexport const removeFloatNull = (value: number): string => {\r\n  const regExp = new RegExp(/\\.?0*$/);\r\n  return value < 1000 ? String(value).replace(regExp, \"\") : setNumberFormat(value);\r\n};\r\n\r\nexport const numberToFixed2 = (number: number): number => {\r\n  if (number < 0.00000001) {\r\n    return (Math.trunc(number * 10000000000)) / 10000000000;\r\n  } else if (number < 0.000001) {\r\n    return (Math.trunc(number * 100000000)) / 100000000;\r\n  } else if (number < 0.0001) {\r\n    return (Math.trunc(number * 1000000)) / 1000000;\r\n  } else if (number < 0.01) {\r\n    return (Math.trunc(number * 10000)) / 10000;\r\n  }\r\n  return ((Math.trunc(number * 100)) / 100)\r\n}\r\n\r\nexport const setClassNamePlusOrMinus = (value: number) => {\r\n  return value > 0 ? 'percentagePlus' : 'percentageMinus';\r\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","// extracted by mini-css-extract-plugin\nexport default {\"iconTime\":\"Exchanges_iconTime__NBobL\",\"hidden\":\"Exchanges_hidden__uYU1h\",\"percentagePlus\":\"Exchanges_percentagePlus__B2f1-\",\"percentageMinus\":\"Exchanges_percentageMinus__LV62d\",\"table\":\"Exchanges_table__uW4Zi\",\"tableCoins\":\"Exchanges_tableCoins__gnOYL\",\"link\":\"Exchanges_link__sYGLk\",\"pagination\":\"Exchanges_pagination__pd8z5\",\"tableExchanges\":\"Exchanges_tableExchanges__LnRmN\"};"],"names":["TablePagination","forwardRef","ref","page","setPage","count","articles","dispatch","useAppDispatch","shape","onChange","event","setCurrentPage","scrollIntoView","behavior","block","executeScroll","current","style","marginBottom","options","chart","animations","enabled","id","type","toolbar","show","sparkline","grid","fill","gradient","opacityFrom","opacityTo","stops","tooltip","theme","fontSize","fontFamily","undefined","x","y","formatter","value","toFixed","title","seriesName","marker","xaxis","labels","yaxis","stroke","curve","width","series","name","data","height","CoinsTableBodyItem","coin","setClassName","market_cap_rank","to","className","src","image","alt","symbol","toUpperCase","removeFloatNull","current_price","price_change_percentage_1h_in_currency","price_change_percentage_24h_in_currency","price_change_percentage_7d_in_currency","setNumberFormat","total_volume","market_cap","Chart","sparkline_in_7d","price","React","useAppSelector","state","crypto","isLoadingCrypto","markets","useState","useEffect","fetchMarkets","NavCrypto","Table","hover","variant","CryptoSkeleton","map","baseColor","highlightColor","colSpan","currentPath","window","location","hash","regexpSelectedCoin","isSelectedCoin","test","replace","substring","length","href","sprite","number","Intl","NumberFormat","format","regExp","RegExp","String","numberToFixed2","Math","trunc","setClassNamePlusOrMinus","bsPrefix","striped","bordered","borderless","size","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children"],"sourceRoot":""}