{"version":3,"file":"static/js/830.281a2a4a.chunk.js","mappings":"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","sources":["webpack://crypto-project/./src/Components/Crypto/Coins/SelectedCoin.module.scss?b69c","Components/Crypto/Coins/SelectedCoinChart.tsx","Components/Crypto/Coins/SelectedCoin.tsx","webpack://crypto-project/./src/Components/Crypto/NavCrypto/NavCrypto.module.scss?63ab","Components/Crypto/NavCrypto/NavCrypto.tsx","utils/utils.ts","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/ProgressBar.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"chartButtons\":\"SelectedCoin_chartButtons__qIOCP\",\"iconTime\":\"SelectedCoin_iconTime__V4jRz\",\"hidden\":\"SelectedCoin_hidden__I83JN\",\"percentagePlus\":\"SelectedCoin_percentagePlus__lkRHR\",\"percentageMinus\":\"SelectedCoin_percentageMinus__aJFvV\",\"coin\":\"SelectedCoin_coin__X3Uxn\",\"descriptionChart\":\"SelectedCoin_descriptionChart__97Ku9\",\"description\":\"SelectedCoin_description__6bK8-\",\"rank\":\"SelectedCoin_rank__T2fby\",\"imgName\":\"SelectedCoin_imgName__ZoaeZ\",\"pricePercentage\":\"SelectedCoin_pricePercentage__J0nUT\",\"progressBar\":\"SelectedCoin_progressBar__04Qnm\",\"lowHigh\":\"SelectedCoin_lowHigh__6HfiP\",\"marketCapInfo\":\"SelectedCoin_marketCapInfo__VCiwx\",\"chartContainer\":\"SelectedCoin_chartContainer__8bwzy\",\"coinInfo\":\"SelectedCoin_coinInfo__ueEqR\"};","import style from './SelectedCoin.module.scss'\r\nimport { useState } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { useAppSelector } from '../../../Store/hooks';\r\n\r\n\r\ninterface ApexChartProps {\r\n  setDays: (e: number | 'max') => void;\r\n}\r\n\r\nconst ApexChart: React.FC<ApexChartProps> = ({setDays}) => {\r\n\r\n  const selectedCoinMarketChart = useAppSelector((state) => state.crypto.selectedCoinMarketChart);\r\n  const marketChart = selectedCoinMarketChart.prices\r\n\r\n  const setNumberFormat = (number: number) => new Intl.NumberFormat(\"ua-UA\").format(number);\r\n  const [chartTime, setChartTime] = useState<number | 'max'>(30)\r\n  \r\n  const series = [\r\n    {\r\n      data: marketChart && marketChart,\r\n    },\r\n  ]\r\n  const options = {\r\n    chart: {\r\n      id: \"area-datetime\",\r\n      type: \"area\",\r\n    },\r\n    yaxis: {\r\n    tickAmount: 6,\r\n    labels: {\r\n        show: true,\r\n        align: 'right',\r\n        style: {\r\n            colors: '#eaeaea',\r\n            fontSize: '12px',\r\n            fontWeight: 400,\r\n        },\r\n        formatter: (value: number) => {\r\n          if (!value) {\r\n            return 0\r\n          } else if (value < 1) {\r\n            return value.toFixed(6)\r\n          } else if (value > 1 && value < 100) {\r\n            return value.toFixed(2)\r\n          }\r\n          return setNumberFormat(value)\r\n        },\r\n    },\r\n    },\r\n    xaxis: {\r\n      show: true,\r\n      type: \"datetime\",\r\n      labels: {\r\n        style: {\r\n          colors: '#eaeaea',\r\n          fontSize: '12px',\r\n          fontFamily: 'Helvetica, Arial, sans-serif',\r\n          fontWeight: 400,\r\n        },\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    markers: {\r\n      size: 0,\r\n      style: \"hollow\",\r\n    },\r\n    stroke: {\r\n      show: true,\r\n      curve: \"straight\",\r\n      lineCap: \"butt\",\r\n      width: 2,\r\n      dashArray: 0,\r\n    },\r\n    tooltip: {\r\n      enabled: true,\r\n      theme: \"dark\",\r\n      style: {\r\n        fontSize: \"12px\",\r\n        fontFamily: undefined,\r\n      },\r\n      x: {\r\n        format: \"dd MMM yyyy\",\r\n      },\r\n      y: {\r\n        formatter: function (value:number) {\r\n          if (value > 5) {\r\n            return value.toFixed(2);\r\n          }\r\n          return value.toFixed(5);\r\n        },\r\n        title: {\r\n          formatter: () => \"$\",\r\n        },\r\n      },\r\n    },\r\n    fill: {\r\n      type: \"gradient\",\r\n      gradient: {\r\n        type: \"vertical\",\r\n        shadeIntensity: 0,\r\n        opacityFrom: 0.1,\r\n        opacityTo: 0.7,\r\n        stops: [0, 100],\r\n      },\r\n    },\r\n  }\r\n\r\n  const onChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setChartTime(Number(e.target.value))\r\n  }\r\n\r\n  const onClickButton = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    setDays(chartTime)\r\n  }\r\n\r\n    return (\r\n      <div className={style.chartTools}>\r\n        <div className={style.chartButtons}>\r\n          <button type=\"button\" onClick={() => setDays(1)} >1d</button>\r\n          <button type=\"button\" onClick={() => setDays(7)} >7d</button>\r\n          <button type=\"button\" onClick={() => setDays(30)} >1m</button>\r\n          <button type=\"button\" onClick={() => setDays(183)} >6m</button>\r\n          <button type=\"button\" onClick={() => setDays(365)} >1y</button>\r\n          <button type=\"button\" onClick={() => setDays('max')} >All</button>\r\n          <span className={style.inputDays}>\r\n            <input type='number' placeholder='Days' onChange={onChangeInput}/>\r\n            <button type=\"button\" onClick={onClickButton}>Show</button>\r\n          </span>\r\n        </div>\r\n\r\n          <ReactApexChart\r\n            options={options}\r\n            series={series}\r\n            type=\"area\"\r\n            height={'300vw'}\r\n          />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ApexChart;\r\n","import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport SelectedCoinMarketChart from './SelectedCoinChart';\r\nimport {\r\n  fetchSelectedCoinMarketChart,\r\n  removeSelectedCoin,\r\n  removeMarketChart,\r\n  fetchCoinsById,\r\n} from '../../../Store/Reducers/cryptoSlice';\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport { useAppDispatch, useAppSelector } from '../../../Store/hooks';\r\nimport NavCrypto from '../NavCrypto/NavCrypto';\r\nimport { setNumberFormat } from '../../../utils/utils';\r\nimport { Preloader } from '../../Common';\r\nimport style from './SelectedCoin.module.scss';\r\n\r\nconst SelectedCoin = () => {\r\n  const { coinId } = useParams();\r\n  const selectedCoin = useAppSelector(state => state.crypto.selectedCoin);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [days, setDays] = useState<number | 'max'>(30);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchSelectedCoinMarketChart([coinId, days]));\r\n    return () => {\r\n      dispatch(removeMarketChart());\r\n    };\r\n  }, [days]);\r\n\r\n  useEffect(() => {\r\n    coinId && dispatch(fetchCoinsById(coinId));\r\n    return () => {\r\n      dispatch(removeSelectedCoin());\r\n    };\r\n  }, [coinId]);\r\n\r\n  const setClassName = (value: number) => {\r\n    return value > 0 ? style.percentagePlus : style.percentageMinus;\r\n  };\r\n\r\n  const coinDescWithoutTags = selectedCoin?.description.replace(\r\n    /<a\\s+href=\"(.*?)\">.*?<\\/a>,?/g,\r\n    ''\r\n  );\r\n\r\n  if (!selectedCoin) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NavCrypto component='Coins'/>\r\n      <section className={style.coin}>\r\n        <div className={style.descriptionChart}>\r\n          <div className={style.description}>\r\n            <p className={style.rank}>Rank #{selectedCoin.market_cap_rank}</p>\r\n            <div className={style.imgName}>\r\n              <img\r\n                src={selectedCoin.image}\r\n                width={55}\r\n                height={55}\r\n                alt={selectedCoin.name}\r\n              />\r\n              <p>{`${\r\n                selectedCoin.name\r\n              } (${selectedCoin.symbol.toUpperCase()})`}</p>\r\n            </div>\r\n            <div className={style.pricePercentage}>\r\n              <div>{selectedCoin.current_price} $</div>\r\n              <div\r\n                className={setClassName(\r\n                  selectedCoin?.price_change_percentage_24h\r\n                )}\r\n              >\r\n                {selectedCoin.price_change_percentage_24h.toFixed(2)}%\r\n              </div>\r\n            </div>\r\n            <div className={style.progressBar}>\r\n              <ProgressBar\r\n                now={selectedCoin.current_price}\r\n                min={selectedCoin.low_24h}\r\n                max={selectedCoin.high_24h}\r\n              />\r\n            </div>\r\n            <div className={style.lowHigh}>\r\n              <div>\r\n                {selectedCoin.low_24h > selectedCoin.current_price\r\n                  ? selectedCoin.current_price\r\n                  : selectedCoin.low_24h}{' '}\r\n                $\r\n              </div>\r\n              <div>24h</div>\r\n              <div>\r\n                {selectedCoin.high_24h < selectedCoin.current_price\r\n                  ? selectedCoin.current_price\r\n                  : selectedCoin.high_24h}{' '}\r\n                $\r\n              </div>\r\n            </div>\r\n\r\n            <div className={style.marketCapInfo}>\r\n              {selectedCoin.market_cap && (\r\n                <div>\r\n                  <p>Market Capitalization:</p>\r\n                  <div>{setNumberFormat(selectedCoin.market_cap)} $</div>\r\n                </div>\r\n              )}\r\n              {selectedCoin.total_volume && (\r\n                <div>\r\n                  <p>Trading Volume 24h:</p>\r\n                  <div>{setNumberFormat(selectedCoin.total_volume)} $</div>\r\n                </div>\r\n              )}\r\n              {selectedCoin.fully_diluted_valuation && (\r\n                <div>\r\n                  <p>Fully diluted valuation:</p>\r\n                  <div>\r\n                    {setNumberFormat(selectedCoin.fully_diluted_valuation)} $\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {selectedCoin.circulating_supply && (\r\n                <div>\r\n                  <p>Circulating Supply:</p>\r\n                  <div>\r\n                    {setNumberFormat(\r\n                      +selectedCoin.circulating_supply.toFixed(0)\r\n                    )}{' '}\r\n                    $\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {selectedCoin.total_supply && (\r\n                <div>\r\n                  <p>Total Supply:</p>\r\n                  <div>\r\n                    {setNumberFormat(+selectedCoin.total_supply.toFixed(0))} $\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {selectedCoin.max_supply && (\r\n                <div>\r\n                  <p>Max Supply:</p>\r\n                  <div>{setNumberFormat(selectedCoin.max_supply)} $</div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className={style.chartContainer}>\r\n            <SelectedCoinMarketChart setDays={setDays} />\r\n          </div>\r\n        </div>\r\n        <p className={style.coinInfo}>{coinDescWithoutTags}</p>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelectedCoin;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"iconTime\":\"NavCrypto_iconTime__Q7ijG\",\"hidden\":\"NavCrypto_hidden__DuPiK\",\"percentagePlus\":\"NavCrypto_percentagePlus__kkbya\",\"percentageMinus\":\"NavCrypto_percentageMinus__1F7pl\",\"container\":\"NavCrypto_container__21zHw\",\"navCrypto\":\"NavCrypto_navCrypto__EPQeL\",\"listLeft\":\"NavCrypto_listLeft__0-anf\",\"leftLink\":\"NavCrypto_leftLink__8VxOk\",\"arrow\":\"NavCrypto_arrow__DWHZ6\",\"home\":\"NavCrypto_home__NTcNG\",\"currentPath\":\"NavCrypto_currentPath__cjwcD\",\"listCenter\":\"NavCrypto_listCenter__rdBdZ\",\"leftText\":\"NavCrypto_leftText__vU0KR\"};","import { NavLink, useLocation } from 'react-router-dom';\r\nimport sprite from '../../../assets/images/icons.svg';\r\nimport style from './NavCrypto.module.scss';\r\n\r\ninterface NavCryptoProps {\r\n  component?: 'Coins' | 'Exchanges';\r\n}\r\n\r\nconst NavCrypto = ({ component }: NavCryptoProps) => {\r\n  let currentPath = useLocation().pathname;\r\n\r\n  const regexpSelectedComponent = new RegExp(`/${component}/`, 'i');\r\n  const isSelectedComponent = regexpSelectedComponent.test(currentPath);\r\n  currentPath = isSelectedComponent\r\n    ? currentPath.replace(regexpSelectedComponent, '').substring(0, 17) +\r\n      (currentPath.length > 18 ? '...' : '')\r\n    : currentPath.replace(/^\\//, '');\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <div className={style.navCrypto}>\r\n        <ul className={style.listLeft}>\r\n          <li>\r\n            <NavLink to=\"/\" className={style.leftLink}>\r\n              <svg className={style.home}>\r\n                <use href={sprite + '#home'} />\r\n              </svg>\r\n              <svg className={style.arrow}>\r\n                <use href={sprite + '#arrow_right'} />\r\n              </svg>\r\n            </NavLink>\r\n          </li>\r\n          <li className={isSelectedComponent ? '' : style.hidden}>\r\n            <NavLink to={`/${component}`} className={style.leftLink}>\r\n              <span className={style.leftText}>{component}</span>\r\n              <svg className={style.arrow}>\r\n                <use href={sprite + '#arrow_right'} />\r\n              </svg>\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <span className={`${style.currentPath} ${style.leftText}`}>\r\n              {currentPath}\r\n            </span>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className={style.listCenter}>\r\n          <li>\r\n            <NavLink to=\"/coins\" className={style.centerLink}>\r\n              Coins\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/exchanges\" className={style.centerLink}>\r\n              Exchanges\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/arbitrage\" className={style.centerLink}>\r\n              Arbitrage\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/converter\" className={style.centerLink}>\r\n              Converter\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavCrypto;\r\n","export const setNumberFormat = (number: number): string => new Intl.NumberFormat(\"ua-UA\").format(number);\r\n\r\nexport const removeFloatNull = (value: number): string => {\r\n  const regExp = new RegExp(/\\.?0*$/);\r\n  return value < 1000 ? String(value).replace(regExp, \"\") : setNumberFormat(value);\r\n};\r\n\r\nexport const numberToFixed2 = (number: number): number => {\r\n  if (number < 0.00000001) {\r\n    return (Math.trunc(number * 10000000000)) / 10000000000;\r\n  } else if (number < 0.000001) {\r\n    return (Math.trunc(number * 100000000)) / 100000000;\r\n  } else if (number < 0.0001) {\r\n    return (Math.trunc(number * 1000000)) / 1000000;\r\n  } else if (number < 0.01) {\r\n    return (Math.trunc(number * 10000)) / 10000;\r\n  }\r\n  return ((Math.trunc(number * 100)) / 100)\r\n}\r\n\r\nexport const setClassNamePlusOrMinus = (value: number) => {\r\n  return value > 0 ? 'percentagePlus' : 'percentageMinus';\r\n}","import * as React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\n\n\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\n\nexport { map, forEach, hasChildOfType };","import classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\n\nconst defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  visuallyHidden: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\n\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild,\n  ...props\n}, ref) => {\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;"],"names":["setDays","marketChart","useAppSelector","state","crypto","selectedCoinMarketChart","prices","useState","chartTime","setChartTime","series","data","options","chart","id","type","yaxis","tickAmount","labels","show","align","style","colors","fontSize","fontWeight","formatter","value","toFixed","number","Intl","NumberFormat","format","xaxis","fontFamily","dataLabels","enabled","markers","size","stroke","curve","lineCap","width","dashArray","tooltip","theme","undefined","x","y","title","fill","gradient","shadeIntensity","opacityFrom","opacityTo","stops","className","onClick","placeholder","onChange","e","Number","target","height","coinId","useParams","selectedCoin","dispatch","useAppDispatch","days","useEffect","fetchSelectedCoinMarketChart","removeMarketChart","fetchCoinsById","removeSelectedCoin","coinDescWithoutTags","description","replace","NavCrypto","component","market_cap_rank","src","image","alt","name","symbol","toUpperCase","current_price","price_change_percentage_24h","ProgressBar","now","min","low_24h","max","high_24h","market_cap","setNumberFormat","total_volume","fully_diluted_valuation","circulating_supply","total_supply","max_supply","currentPath","useLocation","pathname","regexpSelectedComponent","RegExp","isSelectedComponent","test","substring","length","to","href","sprite","removeFloatNull","regExp","String","numberToFixed2","Math","trunc","setClassNamePlusOrMinus","map","children","func","index","React","child","forEach","getPercentage","percentage","round","renderProgressBar","ref","label","visuallyHidden","striped","animated","variant","bsPrefix","props","_jsx","role","classNames","isChild","useBootstrapPrefix","wrapperProps","cloneElement","displayName","defaultProps"],"sourceRoot":""}