{"version":3,"file":"static/js/49.a67fc277.chunk.js","mappings":"yOACA,EAAyO,mCAAzO,EAAmR,+BAAnR,EAAyT,+BAAzT,EAA+V,+BAA/V,EAAyY,mCAAzY,EAAub,mCAAvb,EAA0e,wCAA1e,EAAgiB,sC,SCqGhiB,EA1FyB,WACvB,IAAQA,GAAeC,EAAAA,EAAAA,MAAfD,WACFE,GAAmBC,EAAAA,EAAAA,IACvB,SAAAC,GAAK,OAAIA,EAAMC,SAASH,gBAAnB,IAEDI,GAAWC,EAAAA,EAAAA,KASjB,OAPAC,EAAAA,EAAAA,YAAU,WAER,OADAR,GAAcM,GAASG,EAAAA,EAAAA,IAAkBT,IAClC,WACLM,GAASI,EAAAA,EAAAA,MACV,CACF,GAAE,CAACV,IAECE,GAKH,iCACE,SAACS,EAAA,EAAD,CAAWC,UAAU,eACrB,qBAASC,UAAWC,EAApB,WACE,gBACEC,IAAKb,EAAiBc,MACtBC,IAAKf,EAAiBgB,KACtBL,UAAWC,KAEb,cAAGD,UAAWC,EAAd,SAA2BZ,EAAiBgB,QAC5C,gBAAIL,UAAWC,EAAf,WACE,2BACE,cAAGD,UAAWC,EAAd,SACGZ,EAAiBiB,SAAW,aAE/B,cAAGN,UAAWC,EAAd,yBAEF,2BACE,eAAGD,UAAWC,EAAd,WACGM,EAAAA,EAAAA,IAAgBlB,EAAiBmB,uBAChC,UAAW,IAFf,UAKA,cAAGR,UAAWC,EAAd,kCAEF,2BACE,eAAGD,UAAWC,EAAd,WACGM,EAAAA,EAAAA,IACClB,EAAiBoB,kCACd,UAAW,IAHlB,UAMA,cAAGT,UAAWC,EAAd,6CAEF,2BACE,cAAGD,UAAWC,EAAd,SACGZ,EAAiBqB,kBAAoB,aAExC,cAAGV,UAAWC,EAAd,kCAEF,2BACE,cACEU,KAAMtB,EAAiBuB,IACvBC,OAAO,SACPC,IAAI,+BACJd,UAAWC,EAJb,SAMGZ,EAAiBgB,QAEpB,cAAGL,UAAWC,EAAd,qCAGHZ,EAAiB0B,cAChB,cAAGf,UAAWC,EAAd,SAAkCZ,EAAiB0B,eAErD,eAAGf,UAAWC,EAAd,gEACsD,KACpD,cACEU,KAAMtB,EAAiBgB,KACvBQ,OAAO,SACPC,IAAI,+BACJd,UAAWC,EAJb,SAMGZ,EAAiBgB,OACf,IATP,8BA1DG,SAAC,KAAD,GAyEV,C,yFCnGD,GAAgB,SAAW,4BAA4B,OAAS,0BAA0B,eAAiB,kCAAkC,gBAAkB,mCAAmC,UAAY,6BAA6B,UAAY,6BAA6B,SAAW,4BAA4B,SAAW,4BAA4B,MAAQ,yBAAyB,KAAO,wBAAwB,YAAc,+BAA+B,WAAa,8BAA8B,SAAW,6B,SCyErgB,EAlEkB,SAAC,GAAmC,IAAjCN,EAAgC,EAAhCA,UACfiB,GAAcC,EAAAA,EAAAA,MAAcC,SAE1BC,EAA0B,IAAIC,OAAJ,WAAerB,EAAf,KAA6B,KACvDsB,EAAsBF,EAAwBG,KAAKN,GAMzD,OALAA,EAAcK,EACVL,EAAYO,QAAQJ,EAAyB,IAAIK,UAAU,EAAG,KAC7DR,EAAYS,OAAS,GAAK,MAAQ,IACnCT,EAAYO,QAAQ,MAAO,KAG7B,gBAAKvB,UAAWC,EAAAA,UAAhB,UACE,iBAAKD,UAAWC,EAAAA,UAAhB,WACE,gBAAID,UAAWC,EAAAA,SAAf,WACE,yBACE,UAAC,KAAD,CAASyB,GAAG,IAAI1B,UAAWC,EAAAA,SAA3B,WACE,gBAAKD,UAAWC,EAAAA,KAAhB,UACE,gBAAKU,KAAMgB,EAAAA,EAAS,aAEtB,gBAAK3B,UAAWC,EAAAA,MAAhB,UACE,gBAAKU,KAAMgB,EAAAA,EAAS,yBAI1B,eAAI3B,UAAWqB,EAAsB,GAAKpB,EAAAA,OAA1C,UACE,UAAC,KAAD,CAASyB,GAAE,WAAM3B,GAAaC,UAAWC,EAAAA,SAAzC,WACE,iBAAMD,UAAWC,EAAAA,SAAjB,SAAkCF,KAClC,gBAAKC,UAAWC,EAAAA,MAAhB,UACE,gBAAKU,KAAMgB,EAAAA,EAAS,yBAI1B,yBACE,iBAAM3B,UAAS,UAAKC,EAAAA,YAAL,YAA0BA,EAAAA,UAAzC,SACGe,UAKP,gBAAIhB,UAAWC,EAAAA,WAAf,WACE,yBACE,SAAC,KAAD,CAASyB,GAAG,SAAS1B,UAAWC,EAAAA,WAAhC,sBAIF,yBACE,SAAC,KAAD,CAASyB,GAAG,aAAa1B,UAAWC,EAAAA,WAApC,0BAIF,yBACE,SAAC,KAAD,CAASyB,GAAG,aAAa1B,UAAWC,EAAAA,WAApC,0BAIF,yBACE,SAAC,KAAD,CAASyB,GAAG,aAAa1B,UAAWC,EAAAA,WAApC,gCAQX,C,gICxEM,IAAMM,EAAkB,SAACqB,GAAD,OAA4B,IAAIC,KAAKC,aAAa,SAASC,OAAOH,EAAlE,EAElBI,EAAkB,SAACC,GAC9B,IAAMC,EAAS,IAAId,OAAO,UAC1B,OAAOa,EAAQ,IAAOE,OAAOF,GAAOV,QAAQW,EAAQ,IAAM3B,EAAgB0B,EAC3E,EAEYG,EAAiB,SAACR,GAC7B,OAAIA,EAAS,KACHS,KAAKC,MAAe,KAATV,GAAyB,KACnCA,EAAS,KACVS,KAAKC,MAAe,IAATV,GAAuB,IACjCA,EAAS,KACVS,KAAKC,MAAe,IAATV,GAAqB,IAC/BA,EAAS,IACVS,KAAKC,MAAe,IAATV,GAAmB,IAE/BS,KAAKC,MAAe,IAATV,GAAiB,GACtC,EAEYW,EAA0B,SAACN,GACtC,OAAOA,EAAQ,EAAI,iBAAmB,iBACvC,C","sources":["webpack://crypto-project/./src/Components/Crypto/Exchanges/SelectedExchange.module.scss?e5ec","Components/Crypto/Exchanges/SelectedExchange.tsx","webpack://crypto-project/./src/Components/Crypto/NavCrypto/NavCrypto.module.scss?63ab","Components/Crypto/NavCrypto/NavCrypto.tsx","utils/utils.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"iconTime\":\"SelectedExchange_iconTime__eFntO\",\"hidden\":\"SelectedExchange_hidden__e6KTL\",\"percentagePlus\":\"SelectedExchange_percentagePlus__i+owJ\",\"percentageMinus\":\"SelectedExchange_percentageMinus__jJTB1\",\"exchange\":\"SelectedExchange_exchange__zTHuS\",\"logo\":\"SelectedExchange_logo__MuFyH\",\"name\":\"SelectedExchange_name__uEVsn\",\"list\":\"SelectedExchange_list__sjit3\",\"textMain\":\"SelectedExchange_textMain__1j5TG\",\"siteLink\":\"SelectedExchange_siteLink__Uv1BB\",\"textSecondary\":\"SelectedExchange_textSecondary__NvoDq\",\"description\":\"SelectedExchange_description__tMEjs\"};","import { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useAppDispatch, useAppSelector } from '../../../Store/hooks';\r\nimport {\r\n  fetchExchangeById,\r\n  removeSelectedExchange,\r\n} from '../../../Store/Reducers/exchangeSlice';\r\nimport NavCrypto from '../NavCrypto/NavCrypto';\r\nimport { Preloader } from '../../Common';\r\nimport { setNumberFormat } from '../../../utils/utils';\r\nimport style from './SelectedExchange.module.scss';\r\n\r\nconst SelectedExchange = () => {\r\n  const { exchangeId } = useParams();\r\n  const selectedExchange = useAppSelector(\r\n    state => state.exchange.selectedExchange\r\n  );\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    exchangeId && dispatch(fetchExchangeById(exchangeId));\r\n    return () => {\r\n      dispatch(removeSelectedExchange());\r\n    };\r\n  }, [exchangeId]);\r\n\r\n  if (!selectedExchange) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NavCrypto component='Exchanges'/>\r\n      <section className={style.exchange}>\r\n        <img\r\n          src={selectedExchange.image}\r\n          alt={selectedExchange.name}\r\n          className={style.logo}\r\n        />\r\n        <p className={style.name}>{selectedExchange.name}</p>\r\n        <ul className={style.list}>\r\n          <li>\r\n            <p className={style.textMain}>\r\n              {selectedExchange.country || 'Unknown'}\r\n            </p>\r\n            <p className={style.textSecondary}>Country</p>\r\n          </li>\r\n          <li>\r\n            <p className={style.textMain}>\r\n              {setNumberFormat(selectedExchange.trade_volume_24h_btc) ||\r\n                'Unknown'}{' '}\r\n              BTC\r\n            </p>\r\n            <p className={style.textSecondary}>Trade volume 24h</p>\r\n          </li>\r\n          <li>\r\n            <p className={style.textMain}>\r\n              {setNumberFormat(\r\n                selectedExchange.trade_volume_24h_btc_normalized\r\n              ) || 'Unknown'}{' '}\r\n              BTC\r\n            </p>\r\n            <p className={style.textSecondary}>Trade volume 24h normalized</p>\r\n          </li>\r\n          <li>\r\n            <p className={style.textMain}>\r\n              {selectedExchange.year_established || 'Unknown'}\r\n            </p>\r\n            <p className={style.textSecondary}>Established Year</p>\r\n          </li>\r\n          <li>\r\n            <a\r\n              href={selectedExchange.url}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer nofollow\"\r\n              className={style.siteLink}\r\n            >\r\n              {selectedExchange.name}\r\n            </a>\r\n            <p className={style.textSecondary}>Official Web-site</p>\r\n          </li>\r\n        </ul>\r\n        {selectedExchange.description && (\r\n          <p className={style.description}>{selectedExchange.description}</p>\r\n        )}\r\n        <p className={style.description}>\r\n          If you would like to see more details you can go to{' '}\r\n          <a\r\n            href={selectedExchange.name}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer nofollow\"\r\n            className={style.siteLink}\r\n          >\r\n            {selectedExchange.name}\r\n          </a>{' '}\r\n          official web-site\r\n        </p>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelectedExchange;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"iconTime\":\"NavCrypto_iconTime__Q7ijG\",\"hidden\":\"NavCrypto_hidden__DuPiK\",\"percentagePlus\":\"NavCrypto_percentagePlus__kkbya\",\"percentageMinus\":\"NavCrypto_percentageMinus__1F7pl\",\"container\":\"NavCrypto_container__21zHw\",\"navCrypto\":\"NavCrypto_navCrypto__EPQeL\",\"listLeft\":\"NavCrypto_listLeft__0-anf\",\"leftLink\":\"NavCrypto_leftLink__8VxOk\",\"arrow\":\"NavCrypto_arrow__DWHZ6\",\"home\":\"NavCrypto_home__NTcNG\",\"currentPath\":\"NavCrypto_currentPath__cjwcD\",\"listCenter\":\"NavCrypto_listCenter__rdBdZ\",\"leftText\":\"NavCrypto_leftText__vU0KR\"};","import { NavLink, useLocation } from 'react-router-dom';\r\nimport sprite from '../../../assets/images/icons.svg';\r\nimport style from './NavCrypto.module.scss';\r\n\r\ninterface NavCryptoProps {\r\n  component?: 'Coins' | 'Exchanges';\r\n}\r\n\r\nconst NavCrypto = ({ component }: NavCryptoProps) => {\r\n  let currentPath = useLocation().pathname;\r\n\r\n  const regexpSelectedComponent = new RegExp(`/${component}/`, 'i');\r\n  const isSelectedComponent = regexpSelectedComponent.test(currentPath);\r\n  currentPath = isSelectedComponent\r\n    ? currentPath.replace(regexpSelectedComponent, '').substring(0, 17) +\r\n      (currentPath.length > 18 ? '...' : '')\r\n    : currentPath.replace(/^\\//, '');\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <div className={style.navCrypto}>\r\n        <ul className={style.listLeft}>\r\n          <li>\r\n            <NavLink to=\"/\" className={style.leftLink}>\r\n              <svg className={style.home}>\r\n                <use href={sprite + '#home'} />\r\n              </svg>\r\n              <svg className={style.arrow}>\r\n                <use href={sprite + '#arrow_right'} />\r\n              </svg>\r\n            </NavLink>\r\n          </li>\r\n          <li className={isSelectedComponent ? '' : style.hidden}>\r\n            <NavLink to={`/${component}`} className={style.leftLink}>\r\n              <span className={style.leftText}>{component}</span>\r\n              <svg className={style.arrow}>\r\n                <use href={sprite + '#arrow_right'} />\r\n              </svg>\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <span className={`${style.currentPath} ${style.leftText}`}>\r\n              {currentPath}\r\n            </span>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className={style.listCenter}>\r\n          <li>\r\n            <NavLink to=\"/coins\" className={style.centerLink}>\r\n              Coins\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/exchanges\" className={style.centerLink}>\r\n              Exchanges\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/arbitrage\" className={style.centerLink}>\r\n              Arbitrage\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/converter\" className={style.centerLink}>\r\n              Converter\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavCrypto;\r\n","export const setNumberFormat = (number: number): string => new Intl.NumberFormat(\"ua-UA\").format(number);\r\n\r\nexport const removeFloatNull = (value: number): string => {\r\n  const regExp = new RegExp(/\\.?0*$/);\r\n  return value < 1000 ? String(value).replace(regExp, \"\") : setNumberFormat(value);\r\n};\r\n\r\nexport const numberToFixed2 = (number: number): number => {\r\n  if (number < 0.00000001) {\r\n    return (Math.trunc(number * 10000000000)) / 10000000000;\r\n  } else if (number < 0.000001) {\r\n    return (Math.trunc(number * 100000000)) / 100000000;\r\n  } else if (number < 0.0001) {\r\n    return (Math.trunc(number * 1000000)) / 1000000;\r\n  } else if (number < 0.01) {\r\n    return (Math.trunc(number * 10000)) / 10000;\r\n  }\r\n  return ((Math.trunc(number * 100)) / 100)\r\n}\r\n\r\nexport const setClassNamePlusOrMinus = (value: number) => {\r\n  return value > 0 ? 'percentagePlus' : 'percentageMinus';\r\n}"],"names":["exchangeId","useParams","selectedExchange","useAppSelector","state","exchange","dispatch","useAppDispatch","useEffect","fetchExchangeById","removeSelectedExchange","NavCrypto","component","className","style","src","image","alt","name","country","setNumberFormat","trade_volume_24h_btc","trade_volume_24h_btc_normalized","year_established","href","url","target","rel","description","currentPath","useLocation","pathname","regexpSelectedComponent","RegExp","isSelectedComponent","test","replace","substring","length","to","sprite","number","Intl","NumberFormat","format","removeFloatNull","value","regExp","String","numberToFixed2","Math","trunc","setClassNamePlusOrMinus"],"sourceRoot":""}