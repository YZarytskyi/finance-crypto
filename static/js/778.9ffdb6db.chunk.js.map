{"version":3,"file":"static/js/778.9ffdb6db.chunk.js","mappings":"8PACA,EAA4B,4BAA5B,EAAoE,4BAApE,EAA+G,+BAA/G,EAAuU,2BAAvU,EAA4W,0BAA5W,EAAgZ,0BAAhZ,EAAkb,wBAAlb,EAAyd,+BAAzd,EAA2gB,mCAA3gB,EAA2jB,6BAA3jB,EAAqmB,6BAArmB,EAA8oB,4B,WCOxoBA,EAASC,EAAAA,GAAW,CACxBC,SAAUD,EAAAA,KAAaE,SAAS,iCAChCC,MAAOH,EAAAA,KAAaG,MAAM,wBAAmBD,SAAS,iCACtDE,QAASJ,EAAAA,KAAaE,SAAS,mCASpBG,EAAe,WAAO,IAAD,UAChC,GAAkCC,EAAAA,EAAAA,WAAkB,GAAM,eAAnDC,EAAS,KAAEC,EAAY,KAC9B,GAIIC,EAAAA,EAAAA,IAAqB,CAAEC,UAAUC,EAAAA,EAAAA,GAAYZ,KAH/Ca,EAAQ,EAARA,SACAC,EAAY,EAAZA,aACaC,EAAM,EAAnBC,UAAaD,OAIf,OACE,kBAAME,SAAUH,GAHD,SAACI,GAAiB,OAAKT,GAAa,EAAK,IAGhBU,UAAWC,EAAoBC,aAAa,MAAK,WACvF,mBAAOF,UAAWC,EAAgB,UAAC,aAEjC,oCACMP,EAAS,aAAW,IACxBM,UAAWC,EACXE,YAAY,yBAEd,cAAGH,UAAWC,EAAuB,SACnB,QAAf,EAAAL,EAAOb,gBAAQ,OAAf,EAAiBG,QAAyB,QAAlB,EAAGU,EAAOb,gBAAQ,aAAf,EAAiBG,QAAU,UAG3D,mBAAOc,UAAWC,EAAgB,UAAC,SAEjC,oCACMP,EAAS,UAAQ,IACrBM,UAAWC,EACXE,YAAY,0BAEd,cAAGH,UAAWC,EAAuB,SACtB,QAAZ,EAAAL,EAAOX,aAAK,OAAZ,EAAcC,QAAsB,QAAf,EAAGU,EAAOX,aAAK,aAAZ,EAAcC,QAAU,UAGrD,mBAAOc,UAAWC,EAAgB,UAAC,WAEjC,uCACMP,EAAS,YAAU,IACvBM,UAAWC,EACXE,YAAY,4BAEd,cAAGH,UAAWC,EAAuB,SACpB,QAAd,EAAAL,EAAOV,eAAO,OAAd,EAAgBA,QAAUU,EAAOV,QAAQA,QAAU,UAGxD,SAAC,IAAU,CAACkB,KAAK,SAASC,QAAQ,WAAWL,UAAWC,EAAiB,SAAC,UAG1E,UAAC,KAAK,CAACZ,UAAWA,EAAWC,aAAcA,EAAa,WACtD,eAAIU,UAAWC,EAAiB,SAAC,qCACjC,cAAGD,UAAWC,EAAgB,SAAC,kIAOvC,EC7DA,EAZiB,WACf,OACE,qBAASD,UAAWC,EAAe,WACjC,eAAID,UAAWC,EAAc,SAAC,oBAC9B,iBAAKD,UAAWC,EAAc,WAC5B,gBAAKD,UAAWC,KAChB,SAACd,EAAY,SAIrB,C","sources":["webpack://crypto-project/./src/pages/Contacts/Contacts.module.scss?47b9","pages/Contacts/ContactsForm.tsx","pages/Contacts/Contacts.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formLabel\":\"Contacts_formLabel__zd2AD\",\"formInput\":\"Contacts_formInput__kkGdr\",\"formTextarea\":\"Contacts_formTextarea__27Rkc\",\"iconTime\":\"Contacts_iconTime__f0k2g\",\"hidden\":\"Contacts_hidden__wAWbz\",\"percentagePlus\":\"Contacts_percentagePlus__PQ5hk\",\"percentageMinus\":\"Contacts_percentageMinus__l3ucZ\",\"contacts\":\"Contacts_contacts__4qNg2\",\"heading\":\"Contacts_heading__K6ec1\",\"formImg\":\"Contacts_formImg__9W5jJ\",\"image\":\"Contacts_image__FEKOk\",\"contactsForm\":\"Contacts_contactsForm__Nq5rR\",\"formErrorMessage\":\"Contacts_formErrorMessage__wOPDB\",\"formButton\":\"Contacts_formButton__Iqalt\",\"modalTitle\":\"Contacts_modalTitle__oOJxk\",\"modalText\":\"Contacts_modalText__Eek9P\"};","import { useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from 'yup'\r\nimport SendButton from '@mui/material/Button'\r\nimport { Modal } from 'Components/Common'\r\nimport style from './Contacts.module.scss'\r\n\r\nconst schema = yup.object({\r\n  fullName: yup.string().required('⚠ This field is required'),\r\n  email: yup.string().email('⚠ Invalid email').required('⚠ This field is required'),\r\n  message: yup.string().required('⚠ This field is required'),\r\n})\r\n\r\ninterface IFormInputs {\r\n  fullName: string\r\n  email: string\r\n  message: string\r\n}\r\n\r\nexport const ContactsForm = () => {\r\n  const [modalShow, setModalShow] = useState<boolean>(false)\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<IFormInputs>({ resolver: yupResolver(schema) })\r\n  const onSubmit = (data: IFormInputs) => setModalShow(true)\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)} className={style.contactsForm} autoComplete='off'>\r\n      <label className={style.formLabel}>\r\n        Full Name\r\n        <input\r\n          {...register('fullName')}\r\n          className={style.formInput}\r\n          placeholder='Enter your name...'\r\n        />\r\n        <p className={style.formErrorMessage}>\r\n          {errors.fullName?.message ? errors.fullName?.message : ' '}\r\n        </p>\r\n      </label>\r\n      <label className={style.formLabel}>\r\n        Email\r\n        <input\r\n          {...register('email')}\r\n          className={style.formInput}\r\n          placeholder='Enter your email...'\r\n        />\r\n        <p className={style.formErrorMessage}>\r\n          {errors.email?.message ? errors.email?.message : ' '}\r\n        </p>\r\n      </label>\r\n      <label className={style.formLabel}>\r\n        Message\r\n        <textarea\r\n          {...register('message')}\r\n          className={style.formTextarea}\r\n          placeholder='Enter your message...'\r\n        />\r\n        <p className={style.formErrorMessage}>\r\n          {errors.message?.message ? errors.message.message : ' '}\r\n        </p>\r\n      </label>\r\n      <SendButton type='submit' variant='outlined' className={style.formButton}>\r\n        Send\r\n      </SendButton>\r\n      <Modal modalShow={modalShow} setModalShow={setModalShow}>\r\n        <h1 className={style.modalTitle}>Thank you for getting in touch!</h1>\r\n        <p className={style.modalText}>\r\n          We have received your message and would like to thank you for writing to us. We will reply\r\n          by email as soon as possible.\r\n        </p>\r\n      </Modal>\r\n    </form>\r\n  )\r\n}\r\n","import { ContactsForm } from './ContactsForm'\r\nimport style from './Contacts.module.scss'\r\n\r\nconst Contacts = () => {\r\n  return (\r\n    <section className={style.contacts}>\r\n      <h1 className={style.heading}>Any questions?</h1>\r\n      <div className={style.formImg}>\r\n        <div className={style.image}></div>\r\n        <ContactsForm />\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Contacts\r\n"],"names":["schema","yup","fullName","required","email","message","ContactsForm","useState","modalShow","setModalShow","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","onSubmit","data","className","style","autoComplete","placeholder","type","variant"],"sourceRoot":""}