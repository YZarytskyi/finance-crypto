{"version":3,"file":"static/js/506.12c406d8.chunk.js","mappings":"+OAoEA,UAxDc,WACZ,OAA0CA,EAAAA,EAAAA,GAJjB,iBAMvB,IAFF,eAAOC,EAAP,KAAsBC,EAAtB,KAKA,GAAqCC,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMC,MAAV,IAAjDC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,QACnBC,GAAWC,EAAAA,EAAAA,KACjB,GAAwBC,EAAAA,EAAAA,UAAiB,GAAzC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0CF,EAAAA,EAAAA,WAAkB,GAA5D,eAAOG,EAAP,KAAsBC,EAAtB,KAEMC,GAAaC,EAAAA,EAAAA,QAA2B,OAE9CC,EAAAA,EAAAA,YAAU,WACRT,GAASU,EAAAA,EAAAA,IAAaP,GACvB,GAAE,CAACA,IAUJ,OACE,iCACE,qBAASQ,UAAS,UAAKC,EAAAA,EAAAA,MAAL,YAAoBA,EAAAA,EAAAA,YAAtC,WACE,eAAID,UAAWC,EAAAA,EAAAA,YAAmBC,IAAKN,EAAvC,+BAGA,SAAC,IAAD,CACEO,UAAWhB,EACXC,QAASA,EACTN,cAAeA,EACfsB,cAdc,WACpBT,GAAiB,EAClB,EAaOU,oBAnBoB,SAACC,GAC3BvB,EAAiBuB,EAClB,QAoBG,gBAAKN,UAAWC,EAAAA,EAAAA,WAAhB,UACE,SAAC,KAAD,CACET,KAAMA,EACNC,QAASA,EACTc,MA7CkB,GA8ClBL,IAAKN,OAGT,SAAC,IAAD,CACEF,cAAeA,EACfC,iBAAkBA,EAClBa,SAAO,MAId,C","sources":["pages/Crypto/Coins/Coins.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\r\nimport { TablePagination } from 'Components/Common';\r\nimport { fetchMarkets } from 'Store/Reducers/cryptoSlice';\r\nimport { useAppDispatch, useAppSelector } from 'hooks/redux-hooks';\r\nimport { ModalAuth } from 'Components/Auth/ModalAuth';\r\nimport { useLocalStorageState } from 'hooks/useStorage';\r\nimport { CoinTableHead } from './CoinTableHead';\r\nimport style from './Coins.module.scss';\r\n\r\nconst SELECTED_COINS_KEY = 'selected-coins';\r\nconst COUNT_COINS: number = 50;\r\n\r\nconst Coins = () => {\r\n  const [selectedCoins, setSelectedCoins] = useLocalStorageState<string[]>(\r\n    SELECTED_COINS_KEY,\r\n    []\r\n  );\r\n\r\n  const { isLoadingCrypto, markets } = useAppSelector(state => state.crypto);\r\n  const dispatch = useAppDispatch();\r\n  const [page, setPage] = useState<number>(1);\r\n  const [modalAuthShow, setModalAuthShow] = useState<boolean>(false);\r\n\r\n  const headingRef = useRef<HTMLHeadingElement>(null);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchMarkets(page));\r\n  }, [page]);\r\n\r\n  const setNewSelectedCoins = (newArr: string[]) => {\r\n    setSelectedCoins(newArr);\r\n  };\r\n\r\n  const openModalAuth = () => {\r\n    setModalAuthShow(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className={`${style.table} ${style.tableCoins}`}>\r\n        <h1 className={style.tableHeader} ref={headingRef}>\r\n          Cryptocurrencies\r\n        </h1>\r\n        <CoinTableHead\r\n          isLoading={isLoadingCrypto}\r\n          markets={markets}\r\n          selectedCoins={selectedCoins}\r\n          openModalAuth={openModalAuth}\r\n          setNewSelectedCoins={setNewSelectedCoins}\r\n        />\r\n      </section>\r\n      <div className={style.pagination}>\r\n        <TablePagination\r\n          page={page}\r\n          setPage={setPage}\r\n          count={COUNT_COINS}\r\n          ref={headingRef}\r\n        />\r\n      </div>\r\n      <ModalAuth\r\n        modalAuthShow={modalAuthShow}\r\n        setModalAuthShow={setModalAuthShow}\r\n        isLogin\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Coins;\r\n"],"names":["useLocalStorageState","selectedCoins","setSelectedCoins","useAppSelector","state","crypto","isLoadingCrypto","markets","dispatch","useAppDispatch","useState","page","setPage","modalAuthShow","setModalAuthShow","headingRef","useRef","useEffect","fetchMarkets","className","style","ref","isLoading","openModalAuth","setNewSelectedCoins","newArr","count","isLogin"],"sourceRoot":""}