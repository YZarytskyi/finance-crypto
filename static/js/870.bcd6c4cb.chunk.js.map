{"version":3,"file":"static/js/870.bcd6c4cb.chunk.js","mappings":"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","sources":["Components/Common/TablePagination.tsx","Components/Crypto/Coins/Coins.tsx","Components/Crypto/Coins/Chart.tsx","Components/Crypto/Coins/CoinsTableBody.tsx","Components/Crypto/CryptoSkeleton.tsx","webpack://crypto-project/./src/Components/Crypto/NavCrypto.module.scss?f0af","Components/Crypto/NavCrypto.tsx","../node_modules/react-bootstrap/esm/Table.js","webpack://crypto-project/./src/Components/Crypto/Coins/Coins.module.scss?d27d","webpack://crypto-project/./src/Components/Crypto/Exchanges/Exchanges.module.scss?0877"],"sourcesContent":["import Pagination from '@mui/material/Pagination';\r\n\r\n\r\ninterface TablePaginationProps {\r\n  page: number;\r\n  setPage: (e: number) => void;\r\n  count: number;\r\n}\r\n\r\nconst TablePagination: React.FC<TablePaginationProps> = ({page, setPage, count}) => {\r\n  const handleChange = (event: React.ChangeEvent<unknown>, page: number) => {\r\n    setPage(page)\r\n  }\r\n  return (\r\n      <Pagination count={count} shape=\"rounded\" page={page} onChange={handleChange} style={{marginBottom: 15}}/>\r\n  );\r\n}\r\n\r\nexport default TablePagination;","import style from \"./Coins.module.scss\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport CoinsTableBody from \"./CoinsTableBody\";\r\nimport TablePagination from \"../../Common/TablePagination\";\r\nimport { fetchMarkets } from \"../../../Store/Reducers/cryptoSlice\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../Store/hooks\";\r\nimport NavCrypto from \"../NavCrypto\";\r\nimport { CryptoSkeleton } from \"../CryptoSkeleton\";\r\n\r\nconst Coins = () => {\r\n  const isLoading = useAppSelector((state) => state.crypto.isLoadingCrypto);\r\n  const dispatch = useAppDispatch();\r\n  const [page, setPage] = useState<number>(1);\r\n  const countCoins: number = 50;\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchMarkets(page));\r\n  }, [page]);\r\n\r\n  return (\r\n    <>\r\n      <NavCrypto />\r\n        {isLoading \r\n        ? <CryptoSkeleton /> \r\n        : <section className={`${style.table} ${style.tableCoins}`}> \r\n          <h1 className=\"hidden\">Cryptocurrencies</h1>\r\n          <Table hover variant=\"dark\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Coin</th>\r\n                <th>Price</th>\r\n                <th>1h</th>\r\n                <th>24h</th>\r\n                <th>7d</th>\r\n                <th>Total Volume</th>\r\n                <th>Market Capitalization</th>\r\n                <th>Last&nbsp;7&nbsp;days</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <CoinsTableBody />\r\n            </tbody>\r\n          </Table>\r\n          </section>\r\n        }\r\n        <div className={style.pagination}>\r\n          <TablePagination page={page} setPage={setPage} count={countCoins} />\r\n        </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Coins;\r\n","import Chart from \"react-apexcharts\";\r\nimport { ApexOptions } from \"apexcharts\";\r\n\r\ninterface ChartCoinsProps {\r\n  data: Array<number>;\r\n}\r\nconst ChartCoins: React.FC<ChartCoinsProps> = ({ data }) => {\r\n  const options: ApexOptions = {\r\n    chart: {\r\n      animations: {\r\n        enabled: false,\r\n      },\r\n      id: \"area-datetime\",\r\n      type: \"area\",\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n      sparkline: {\r\n        enabled: true,\r\n      },\r\n    },\r\n    grid: {\r\n      show: false,\r\n    },\r\n    fill: {\r\n      type: \"gradient\",\r\n      gradient: {\r\n        type: \"vertical\",\r\n        opacityFrom: 0.1,\r\n        opacityTo: 0.7,\r\n        stops: [0, 100],\r\n      },\r\n    },\r\n    tooltip: {\r\n      enabled: true,\r\n      theme: \"dark\",\r\n      style: {\r\n        fontSize: \"12px\",\r\n        fontFamily: undefined,\r\n      },\r\n      x: {\r\n        show: false,\r\n      },\r\n      y: {\r\n        formatter: function (value) {\r\n          if (value > 5) {\r\n            return value.toFixed(2);\r\n          }\r\n          return value.toFixed(5);\r\n        },\r\n        title: {\r\n          formatter: (seriesName) => \"$\",\r\n        },\r\n      },\r\n      marker: {\r\n        show: false,\r\n      },\r\n    },\r\n\r\n    xaxis: {\r\n      type: \"numeric\",\r\n      labels: {\r\n        show: false,\r\n      },\r\n    },\r\n    yaxis: {\r\n      show: false,\r\n    },\r\n    stroke: {\r\n      show: true,\r\n      curve: \"straight\",\r\n      width: 2,\r\n    },\r\n  };\r\n  const series = [\r\n    {\r\n      name: \"price\",\r\n      type: \"area\",\r\n      data: data,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Chart\r\n      options={options}\r\n      series={series}\r\n      type=\"line\"\r\n      width=\"100%\"\r\n      height=\"60px\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default ChartCoins;\r\n","import React from \"react\";\r\nimport style from \"./Coins.module.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport ChartCoins from \"./Chart\";\r\nimport { useAppSelector } from \"../../../Store/hooks\";\r\n\r\n\r\nexport const parseNumber = (number: number) => new Intl.NumberFormat(\"ua-UA\").format(number);\r\nexport const parseValue = (value: number) => {\r\n  const regExp = new RegExp(/\\.?0*$/);\r\n  return value < 1000 ? String(value).replace(regExp, \"\") : parseNumber(value);\r\n};\r\nexport const setClassName = (value: number) => {\r\n  return value > 0 ? style.percentagePlus : style.percentageMinus;\r\n};\r\n\r\n\r\n\r\nconst CoinsTableBody = () => {\r\n  const markets = useAppSelector((state) => state.crypto.markets);\r\n\r\n  return (\r\n    <>\r\n    {markets.map((coin) => (\r\n      <tr key={coin.id}>\r\n        <td>{coin.market_cap_rank}</td>\r\n        <td>\r\n          <NavLink to={`/crypto/coins/${coin.id}`} className={style.link}>\r\n            <img src={coin.image} alt={coin.name} height={30} width={30} />\r\n            <p>{coin.name}</p>\r\n            <p>{coin.symbol.toUpperCase()}</p>\r\n          </NavLink>\r\n        </td>\r\n        <td>{parseValue(coin.current_price)} $</td>\r\n        <td className={setClassName(coin.price_change_percentage_1h_in_currency)}>\r\n          {coin.price_change_percentage_1h_in_currency?.toFixed(2)} %\r\n        </td>\r\n        <td className={setClassName(coin.price_change_percentage_24h_in_currency)}>\r\n          {coin.price_change_percentage_24h_in_currency?.toFixed(2)} %\r\n        </td>\r\n        <td className={setClassName(coin.price_change_percentage_7d_in_currency)}>\r\n          {coin.price_change_percentage_7d_in_currency?.toFixed(2)} %\r\n        </td>\r\n        <td>{parseNumber(coin.total_volume)} $</td>\r\n        <td>{parseNumber(coin.market_cap)} $</td>\r\n        <td>\r\n          <ChartCoins data={coin.sparkline_in_7d.price} />\r\n        </td>\r\n      </tr>\r\n    ))}\r\n    </>\r\n  )\r\n};\r\n\r\nexport default React.memo(CoinsTableBody);\r\n","import style from \"../Crypto/Exchanges/Exchanges.module.scss\";\r\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\n\r\n\r\nexport const CryptoSkeleton = () => {\r\n  return (\r\n    <>\r\n      <SkeletonTheme baseColor=\"#2c2b2b\" highlightColor=\"#4d4d4d\">\r\n        <div className={style.table} style={{marginBottom: -17, marginTop: -1}}>\r\n          <div>\r\n           <Skeleton height={50} width={'100%'} />\r\n          </div>\r\n        </div>\r\n      </SkeletonTheme>\r\n      <SkeletonTheme baseColor=\"#121212\" highlightColor=\"#262626\">\r\n        <div className={style.table} style={{marginBottom: 15}}>\r\n          <div>\r\n           <Skeleton count={15} height={53} width={'100%'} />\r\n          </div>\r\n        </div>\r\n      </SkeletonTheme>\r\n    </>\r\n  );\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"iconTime\":\"NavCrypto_iconTime__I4Vhv\",\"hidden\":\"NavCrypto_hidden__tN0cv\",\"navCrypto\":\"NavCrypto_navCrypto__C9pNy\",\"listLeft\":\"NavCrypto_listLeft__NSkYO\",\"leftLink\":\"NavCrypto_leftLink__Y2MD1\",\"arrow\":\"NavCrypto_arrow__v0AAw\",\"home\":\"NavCrypto_home__deF99\",\"currentPath\":\"NavCrypto_currentPath__sTRX4\",\"listCenter\":\"NavCrypto_listCenter__bfrWA\"};","import style from \"./NavCrypto.module.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport sprite from \"../../assets/images/icons.svg\";\r\n\r\nconst NavCrypto = () => {\r\n  let currentPath = window.location.pathname;\r\n  const regexpCoins = /\\/crypto\\//i;\r\n  const regexpSelectedCoin = /\\/crypto\\/coins\\//i;\r\n  const isSelectedCoin = regexpSelectedCoin.test(currentPath);\r\n  currentPath = currentPath.replace(isSelectedCoin ? regexpSelectedCoin : regexpCoins, \"\");\r\n\r\n  return (\r\n    <div className={style.navCrypto}>\r\n      <ul className={style.listLeft}>\r\n        <li>\r\n          <NavLink to=\"/\" className={style.leftLink}>\r\n            <svg className={style.home}>\r\n              <use href={sprite + \"#home\"} />\r\n            </svg>\r\n            <svg className={style.arrow}>\r\n              <use href={sprite + \"#arrow_right\"} />\r\n            </svg>\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/crypto/coins\" className={style.leftLink}>\r\n            Crypto \r\n            <svg className={style.arrow}>\r\n              <use href={sprite + \"#arrow_right\"} />\r\n            </svg>\r\n          </NavLink>\r\n        </li>\r\n        <li className={isSelectedCoin ? \"\" : \"hidden\"}>\r\n          <NavLink to=\"/crypto/coins\" className={style.leftLink}>\r\n            Coins \r\n            <svg className={style.arrow}>\r\n              <use href={sprite + \"#arrow_right\"} />\r\n            </svg>\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <span className={style.currentPath}>{currentPath}</span>\r\n        </li>\r\n      </ul>\r\n      <ul className={style.listCenter}>\r\n        <li>\r\n          <NavLink to=\"/crypto/coins\" className={style.centerLink}>Coins</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/crypto/exchanges\" className={style.centerLink}>Exchanges</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/crypto/arbitrage\" className={style.centerLink}>Arbitrage</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/crypto/converter\" className={style.centerLink}>Converter</NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavCrypto;\r\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","// extracted by mini-css-extract-plugin\nexport default {\"iconTime\":\"Coins_iconTime__zJ4BK\",\"hidden\":\"Coins_hidden__02BC-\",\"table\":\"Coins_table__PR9uh\",\"tableCoins\":\"Coins_tableCoins__dbVk3\",\"link\":\"Coins_link__yAojc\",\"percentagePlus\":\"Coins_percentagePlus__jkipC\",\"percentageMinus\":\"Coins_percentageMinus__VR4Pb\",\"pagination\":\"Coins_pagination__-qiwy\"};","// extracted by mini-css-extract-plugin\nexport default {\"iconTime\":\"Exchanges_iconTime__NBobL\",\"hidden\":\"Exchanges_hidden__uYU1h\",\"table\":\"Exchanges_table__uW4Zi\",\"tableCoins\":\"Exchanges_tableCoins__gnOYL\",\"link\":\"Exchanges_link__sYGLk\",\"percentagePlus\":\"Exchanges_percentagePlus__B2f1-\",\"percentageMinus\":\"Exchanges_percentageMinus__LV62d\",\"pagination\":\"Exchanges_pagination__pd8z5\",\"tableExchanges\":\"Exchanges_tableExchanges__LnRmN\"};"],"names":["page","setPage","count","shape","onChange","event","style","marginBottom","isLoading","useAppSelector","state","crypto","isLoadingCrypto","dispatch","useAppDispatch","useState","useEffect","fetchMarkets","className","hover","variant","options","chart","animations","enabled","id","type","toolbar","show","sparkline","grid","fill","gradient","opacityFrom","opacityTo","stops","tooltip","theme","fontSize","fontFamily","undefined","x","y","formatter","value","toFixed","title","seriesName","marker","xaxis","labels","yaxis","stroke","curve","width","series","name","data","height","parseNumber","number","Intl","NumberFormat","format","parseValue","regExp","RegExp","String","replace","setClassName","CoinsTableBody","markets","map","coin","market_cap_rank","to","src","image","alt","symbol","toUpperCase","current_price","price_change_percentage_1h_in_currency","price_change_percentage_24h_in_currency","price_change_percentage_7d_in_currency","total_volume","market_cap","Chart","sparkline_in_7d","price","React","CryptoSkeleton","baseColor","highlightColor","marginTop","currentPath","window","location","pathname","regexpSelectedCoin","isSelectedCoin","test","href","sprite","Table","ref","bsPrefix","striped","bordered","borderless","size","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children"],"sourceRoot":""}