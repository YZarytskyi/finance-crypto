{"version":3,"file":"static/js/49.51e896fa.chunk.js","mappings":"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","sources":["webpack://crypto-project/./src/Components/Crypto/Exchanges/SelectedExchange.module.scss?e5ec","Components/Crypto/Exchanges/SelectedExchange.tsx","webpack://crypto-project/./src/Components/Crypto/NavCrypto.module.scss?f0af","Components/Crypto/NavCrypto.tsx","utils/utils.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"iconTime\":\"SelectedExchange_iconTime__eFntO\",\"hidden\":\"SelectedExchange_hidden__e6KTL\",\"percentagePlus\":\"SelectedExchange_percentagePlus__i+owJ\",\"percentageMinus\":\"SelectedExchange_percentageMinus__jJTB1\",\"exchange\":\"SelectedExchange_exchange__zTHuS\",\"logo\":\"SelectedExchange_logo__MuFyH\",\"name\":\"SelectedExchange_name__uEVsn\",\"list\":\"SelectedExchange_list__sjit3\",\"textMain\":\"SelectedExchange_textMain__1j5TG\",\"siteLink\":\"SelectedExchange_siteLink__Uv1BB\",\"textSecondary\":\"SelectedExchange_textSecondary__NvoDq\",\"description\":\"SelectedExchange_description__tMEjs\"};","import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../Store/hooks\";\r\nimport {\r\n  fetchExchangeById,\r\n  removeSelectedExchange,\r\n} from \"../../../Store/Reducers/exchangeSlice\";\r\nimport NavCrypto from \"../NavCrypto\";\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport { setNumberFormat } from \"../../../utils/utils\";\r\nimport style from \"./SelectedExchange.module.scss\";\r\n\r\nconst SelectedExchange = () => {\r\n  const { exchangeId } = useParams();\r\n  const selectedExchange = useAppSelector(\r\n    (state) => state.exchange.selectedExchange\r\n  );\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    exchangeId && dispatch(fetchExchangeById(exchangeId));\r\n    return () => {\r\n      dispatch(removeSelectedExchange());\r\n    };\r\n  }, [exchangeId]);\r\n\r\n  if (!selectedExchange) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NavCrypto />\r\n      <section className={style.exchange}>\r\n        <img\r\n          src={selectedExchange.image}\r\n          alt={selectedExchange.name}\r\n          className={style.logo}\r\n        />\r\n        <p className={style.name}>{selectedExchange.name}</p>\r\n        <ul className={style.list}>\r\n          <li>\r\n            <p className={style.textMain}>\r\n              {selectedExchange.country || \"Unknown\"}\r\n            </p>\r\n            <p className={style.textSecondary}>Country</p>\r\n          </li>\r\n          <li>\r\n            <p className={style.textMain}>\r\n              {setNumberFormat(selectedExchange.trade_volume_24h_btc) ||\r\n                \"Unknown\"}{\" \"}\r\n              BTC\r\n            </p>\r\n            <p className={style.textSecondary}>Trade volume 24h</p>\r\n          </li>\r\n          <li>\r\n            <p className={style.textMain}>\r\n              {setNumberFormat(\r\n                selectedExchange.trade_volume_24h_btc_normalized\r\n              ) || \"Unknown\"}{\" \"}\r\n              BTC\r\n            </p>\r\n            <p className={style.textSecondary}>Trade volume 24h normalized</p>\r\n          </li>\r\n          <li>\r\n            <p className={style.textMain}>\r\n              {selectedExchange.year_established || \"Unknown\"}\r\n            </p>\r\n            <p className={style.textSecondary}>Established Year</p>\r\n          </li>\r\n          <li>\r\n            <a\r\n              href={selectedExchange.url}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer nofollow\"\r\n              className={style.siteLink}\r\n            >\r\n              {selectedExchange.name}\r\n            </a>\r\n            <p className={style.textSecondary}>Official Web-site</p>\r\n          </li>\r\n        </ul>\r\n        {selectedExchange.description && (\r\n          <p className={style.description}>{selectedExchange.description}</p>\r\n        )}\r\n        <p className={style.description}>\r\n          If you would like to see more details you can go to{\" \"}\r\n          <a\r\n            href={selectedExchange.name}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer nofollow\"\r\n            className={style.siteLink}\r\n          >\r\n            {selectedExchange.name}\r\n          </a>{\" \"}\r\n          official web-site\r\n        </p>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelectedExchange;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"iconTime\":\"NavCrypto_iconTime__I4Vhv\",\"hidden\":\"NavCrypto_hidden__tN0cv\",\"percentagePlus\":\"NavCrypto_percentagePlus__eSklH\",\"percentageMinus\":\"NavCrypto_percentageMinus__1qsQk\",\"container\":\"NavCrypto_container__Wd1RQ\",\"navCrypto\":\"NavCrypto_navCrypto__C9pNy\",\"listLeft\":\"NavCrypto_listLeft__NSkYO\",\"leftLink\":\"NavCrypto_leftLink__Y2MD1\",\"arrow\":\"NavCrypto_arrow__v0AAw\",\"home\":\"NavCrypto_home__deF99\",\"currentPath\":\"NavCrypto_currentPath__sTRX4\",\"listCenter\":\"NavCrypto_listCenter__bfrWA\"};","import style from \"./NavCrypto.module.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport sprite from \"../../assets/images/icons.svg\";\r\n\r\nconst NavCrypto = () => {\r\n  let currentPath = window.location.hash;\r\n  const regexpCoins = /#\\/crypto\\//i;\r\n  const regexpSelectedCoin = /#\\/crypto\\/coins\\//i;\r\n  const isSelectedCoin = regexpSelectedCoin.test(currentPath);\r\n  currentPath = currentPath.replace(\r\n    isSelectedCoin ? regexpSelectedCoin : regexpCoins,\r\n    \"\"\r\n  );\r\n  currentPath = isSelectedCoin\r\n    ? currentPath.substring(0, 17) + (currentPath.length > 18 ? \"...\" : \"\")\r\n    : currentPath;\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <div className={style.navCrypto}>\r\n        <ul className={style.listLeft}>\r\n          <li>\r\n            <NavLink to=\"/\" className={style.leftLink}>\r\n              <svg className={style.home}>\r\n                <use href={sprite + \"#home\"} />\r\n              </svg>\r\n              <svg className={style.arrow}>\r\n                <use href={sprite + \"#arrow_right\"} />\r\n              </svg>\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/crypto/coins\" className={style.leftLink}>\r\n              Crypto\r\n              <svg className={style.arrow}>\r\n                <use href={sprite + \"#arrow_right\"} />\r\n              </svg>\r\n            </NavLink>\r\n          </li>\r\n          <li className={isSelectedCoin ? \"\" : style.hidden}>\r\n            <NavLink to=\"/crypto/coins\" className={style.leftLink}>\r\n              Coins\r\n              <svg className={style.arrow}>\r\n                <use href={sprite + \"#arrow_right\"} />\r\n              </svg>\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <span className={style.currentPath}>{currentPath}</span>\r\n          </li>\r\n        </ul>\r\n        <ul className={style.listCenter}>\r\n          <li>\r\n            <NavLink to=\"/crypto/coins\" className={style.centerLink}>\r\n              Coins\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/crypto/exchanges\" className={style.centerLink}>\r\n              Exchanges\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/crypto/arbitrage\" className={style.centerLink}>\r\n              Arbitrage\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/crypto/converter\" className={style.centerLink}>\r\n              Converter\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavCrypto;\r\n","export const setNumberFormat = (number: number): string => new Intl.NumberFormat(\"ua-UA\").format(number);\r\n\r\nexport const removeFloatNull = (value: number): string => {\r\n  const regExp = new RegExp(/\\.?0*$/);\r\n  return value < 1000 ? String(value).replace(regExp, \"\") : setNumberFormat(value);\r\n};\r\n\r\nexport const numberToFixed2 = (number: number): number => {\r\n  if (number < 0.00000001) {\r\n    return (Math.trunc(number * 10000000000)) / 10000000000;\r\n  } else if (number < 0.000001) {\r\n    return (Math.trunc(number * 100000000)) / 100000000;\r\n  } else if (number < 0.0001) {\r\n    return (Math.trunc(number * 1000000)) / 1000000;\r\n  } else if (number < 0.01) {\r\n    return (Math.trunc(number * 10000)) / 10000;\r\n  }\r\n  return ((Math.trunc(number * 100)) / 100)\r\n}\r\n\r\nexport const setClassNamePlusOrMinus = (value: number) => {\r\n  return value > 0 ? 'percentagePlus' : 'percentageMinus';\r\n}"],"names":["exchangeId","useParams","selectedExchange","useAppSelector","state","exchange","dispatch","useAppDispatch","useEffect","fetchExchangeById","removeSelectedExchange","NavCrypto","className","style","src","image","alt","name","country","setNumberFormat","trade_volume_24h_btc","trade_volume_24h_btc_normalized","year_established","href","url","target","rel","description","Preloader","currentPath","window","location","hash","regexpSelectedCoin","isSelectedCoin","test","replace","substring","length","to","sprite","number","Intl","NumberFormat","format","removeFloatNull","value","regExp","RegExp","String","numberToFixed2","Math","trunc","setClassNamePlusOrMinus"],"sourceRoot":""}