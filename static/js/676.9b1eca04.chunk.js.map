{"version":3,"file":"static/js/676.9b1eca04.chunk.js","mappings":"+NACA,EAAyO,mCAAzO,EAAmR,+BAAnR,EAAyT,+BAAzT,EAA+V,+BAA/V,EAAyY,mCAAzY,EAAub,mCAAvb,EAA0e,wCAA1e,EAAgiB,sC,SCiGhiB,EAvFyB,WACvB,IAAQA,GAAeC,EAAAA,EAAAA,MAAfD,WACFE,GAAmBC,EAAAA,EAAAA,IACvB,SAAAC,GAAK,OAAIA,EAAMC,SAASH,gBAAnB,IAEDI,GAAWC,EAAAA,EAAAA,KASjB,OAPAC,EAAAA,EAAAA,YAAU,WAER,OADAF,GAASG,EAAAA,EAAAA,IAAkBT,IACpB,WACLM,GAASI,EAAAA,EAAAA,MACV,CACF,GAAE,CAACV,IAECE,GAKH,qBAASS,UAAWC,EAApB,WACE,gBACEC,IAAKX,EAAiBY,MACtBC,IAAKb,EAAiBc,KACtBL,UAAWC,KAEb,cAAGD,UAAWC,EAAd,SAA2BV,EAAiBc,QAC5C,gBAAIL,UAAWC,EAAf,WACE,2BACE,cAAGD,UAAWC,EAAd,SACGV,EAAiBe,SAAW,aAE/B,cAAGN,UAAWC,EAAd,yBAEF,2BACE,eAAGD,UAAWC,EAAd,WACGM,EAAAA,EAAAA,IAAgBhB,EAAiBiB,uBAChC,UAAW,IAFf,UAKA,cAAGR,UAAWC,EAAd,kCAEF,2BACE,eAAGD,UAAWC,EAAd,WACGM,EAAAA,EAAAA,IACChB,EAAiBkB,kCACd,UAAW,IAHlB,UAMA,cAAGT,UAAWC,EAAd,6CAEF,2BACE,cAAGD,UAAWC,EAAd,SACGV,EAAiBmB,kBAAoB,aAExC,cAAGV,UAAWC,EAAd,kCAEF,2BACE,cACEU,KAAMpB,EAAiBqB,IACvBC,OAAO,SACPC,IAAI,+BACJd,UAAWC,EAJb,SAMGV,EAAiBc,QAEpB,cAAGL,UAAWC,EAAd,qCAGHV,EAAiBwB,cAChB,cAAGf,UAAWC,EAAd,SAAkCV,EAAiBwB,eAErD,eAAGf,UAAWC,EAAd,gEACsD,KACpD,cACEU,KAAMpB,EAAiBc,KACvBQ,OAAO,SACPC,IAAI,+BACJd,UAAWC,EAJb,SAMGV,EAAiBc,OACf,IATP,2BAxDK,SAAC,KAAD,GAsEV,C,gIChGM,IAAME,EAAkB,SAACS,GAAD,OAA4B,IAAIC,KAAKC,aAAa,SAASC,OAAOH,EAAlE,EAElBI,EAAkB,SAACC,GAC9B,IAAMC,EAAS,IAAIC,OAAO,UAC1B,OAAOF,EAAQ,IAAOG,OAAOH,GAAOI,QAAQH,EAAQ,IAAMf,EAAgBc,EAC3E,EAEYK,EAAiB,SAACV,GAC7B,OAAIA,EAAS,KACHW,KAAKC,MAAe,KAATZ,GAAyB,KACnCA,EAAS,KACVW,KAAKC,MAAe,IAATZ,GAAuB,IACjCA,EAAS,KACVW,KAAKC,MAAe,IAATZ,GAAqB,IAC/BA,EAAS,IACVW,KAAKC,MAAe,IAATZ,GAAmB,IAE/BW,KAAKC,MAAe,IAATZ,GAAiB,GACtC,EAEYa,EAA0B,SAACR,GACtC,OAAOA,EAAQ,EAAI,iBAAmB,iBACvC,C","sources":["webpack://crypto-project/./src/pages/Crypto/Exchanges/SelectedExchange/SelectedExchange.module.scss?9525","pages/Crypto/Exchanges/SelectedExchange/SelectedExchange.tsx","utils/utils.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"iconTime\":\"SelectedExchange_iconTime__JOuxh\",\"hidden\":\"SelectedExchange_hidden__Y7HKr\",\"percentagePlus\":\"SelectedExchange_percentagePlus__qtqW+\",\"percentageMinus\":\"SelectedExchange_percentageMinus__5RQaR\",\"exchange\":\"SelectedExchange_exchange__E69sl\",\"logo\":\"SelectedExchange_logo__HM+qn\",\"name\":\"SelectedExchange_name__6m2QE\",\"list\":\"SelectedExchange_list__AuOOC\",\"textMain\":\"SelectedExchange_textMain__fHI94\",\"siteLink\":\"SelectedExchange_siteLink__ZPkI+\",\"textSecondary\":\"SelectedExchange_textSecondary__hZSAt\",\"description\":\"SelectedExchange_description__A5+DW\"};","import { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useAppDispatch, useAppSelector } from 'hooks/redux-hooks';\r\nimport {\r\n  fetchExchangeById,\r\n  removeSelectedExchange,\r\n} from 'Store/Reducers/exchangeSlice';\r\nimport { Preloader } from 'Components/Common';\r\nimport { setNumberFormat } from 'utils/utils';\r\nimport style from './SelectedExchange.module.scss';\r\n\r\nconst SelectedExchange = () => {\r\n  const { exchangeId } = useParams();\r\n  const selectedExchange = useAppSelector(\r\n    state => state.exchange.selectedExchange\r\n  );\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchExchangeById(exchangeId!));\r\n    return () => {\r\n      dispatch(removeSelectedExchange());\r\n    };\r\n  }, [exchangeId]);\r\n\r\n  if (!selectedExchange) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <section className={style.exchange}>\r\n      <img\r\n        src={selectedExchange.image}\r\n        alt={selectedExchange.name}\r\n        className={style.logo}\r\n      />\r\n      <p className={style.name}>{selectedExchange.name}</p>\r\n      <ul className={style.list}>\r\n        <li>\r\n          <p className={style.textMain}>\r\n            {selectedExchange.country || 'Unknown'}\r\n          </p>\r\n          <p className={style.textSecondary}>Country</p>\r\n        </li>\r\n        <li>\r\n          <p className={style.textMain}>\r\n            {setNumberFormat(selectedExchange.trade_volume_24h_btc) ||\r\n              'Unknown'}{' '}\r\n            BTC\r\n          </p>\r\n          <p className={style.textSecondary}>Trade volume 24h</p>\r\n        </li>\r\n        <li>\r\n          <p className={style.textMain}>\r\n            {setNumberFormat(\r\n              selectedExchange.trade_volume_24h_btc_normalized\r\n            ) || 'Unknown'}{' '}\r\n            BTC\r\n          </p>\r\n          <p className={style.textSecondary}>Trade volume 24h normalized</p>\r\n        </li>\r\n        <li>\r\n          <p className={style.textMain}>\r\n            {selectedExchange.year_established || 'Unknown'}\r\n          </p>\r\n          <p className={style.textSecondary}>Established Year</p>\r\n        </li>\r\n        <li>\r\n          <a\r\n            href={selectedExchange.url}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer nofollow\"\r\n            className={style.siteLink}\r\n          >\r\n            {selectedExchange.name}\r\n          </a>\r\n          <p className={style.textSecondary}>Official Web-site</p>\r\n        </li>\r\n      </ul>\r\n      {selectedExchange.description && (\r\n        <p className={style.description}>{selectedExchange.description}</p>\r\n      )}\r\n      <p className={style.description}>\r\n        If you would like to see more details you can go to{' '}\r\n        <a\r\n          href={selectedExchange.name}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer nofollow\"\r\n          className={style.siteLink}\r\n        >\r\n          {selectedExchange.name}\r\n        </a>{' '}\r\n        official web-site\r\n      </p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SelectedExchange;\r\n","export const setNumberFormat = (number: number): string => new Intl.NumberFormat(\"ua-UA\").format(number);\r\n\r\nexport const removeFloatNull = (value: number): string => {\r\n  const regExp = new RegExp(/\\.?0*$/);\r\n  return value < 1000 ? String(value).replace(regExp, \"\") : setNumberFormat(value);\r\n};\r\n\r\nexport const numberToFixed2 = (number: number): number => {\r\n  if (number < 0.00000001) {\r\n    return (Math.trunc(number * 10000000000)) / 10000000000;\r\n  } else if (number < 0.000001) {\r\n    return (Math.trunc(number * 100000000)) / 100000000;\r\n  } else if (number < 0.0001) {\r\n    return (Math.trunc(number * 1000000)) / 1000000;\r\n  } else if (number < 0.01) {\r\n    return (Math.trunc(number * 10000)) / 10000;\r\n  }\r\n  return ((Math.trunc(number * 100)) / 100)\r\n}\r\n\r\nexport const setClassNamePlusOrMinus = (value: number) => {\r\n  return value > 0 ? 'percentagePlus' : 'percentageMinus';\r\n}"],"names":["exchangeId","useParams","selectedExchange","useAppSelector","state","exchange","dispatch","useAppDispatch","useEffect","fetchExchangeById","removeSelectedExchange","className","style","src","image","alt","name","country","setNumberFormat","trade_volume_24h_btc","trade_volume_24h_btc_normalized","year_established","href","url","target","rel","description","number","Intl","NumberFormat","format","removeFloatNull","value","regExp","RegExp","String","replace","numberToFixed2","Math","trunc","setClassNamePlusOrMinus"],"sourceRoot":""}