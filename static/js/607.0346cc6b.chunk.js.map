{"version":3,"file":"static/js/607.0346cc6b.chunk.js","mappings":"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","sources":["Components/Common/TablePagination.tsx","webpack://crypto-project/./src/Components/Crypto/Coins/Coins.module.scss?d27d","Components/Crypto/Coins/Chart.tsx","Components/Crypto/Coins/CoinsTableBody.tsx","Components/Crypto/Coins/Coins.tsx","Components/Crypto/CryptoSkeleton.tsx","webpack://crypto-project/./src/Components/Crypto/NavCrypto.module.scss?f0af","Components/Crypto/NavCrypto.tsx","utils/utils.ts","../node_modules/react-bootstrap/esm/Table.js","webpack://crypto-project/./src/Components/Crypto/Exchanges/Exchanges.module.scss?0877"],"sourcesContent":["import Pagination from '@mui/material/Pagination';\r\n\r\n\r\ninterface TablePaginationProps {\r\n  page: number;\r\n  setPage: (e: number) => void;\r\n  count: number;\r\n}\r\n\r\nconst TablePagination: React.FC<TablePaginationProps> = ({page, setPage, count}) => {\r\n  const handleChange = (event: React.ChangeEvent<unknown>, page: number) => {\r\n    setPage(page)\r\n  }\r\n  return (\r\n      <Pagination count={count} shape=\"rounded\" page={page} onChange={handleChange} style={{marginBottom: 15}}/>\r\n  );\r\n}\r\n\r\nexport default TablePagination;","// extracted by mini-css-extract-plugin\nexport default {\"iconTime\":\"Coins_iconTime__zJ4BK\",\"hidden\":\"Coins_hidden__02BC-\",\"table\":\"Coins_table__PR9uh\",\"tableCoins\":\"Coins_tableCoins__dbVk3\",\"link\":\"Coins_link__yAojc\",\"percentagePlus\":\"Coins_percentagePlus__jkipC\",\"percentageMinus\":\"Coins_percentageMinus__VR4Pb\",\"pagination\":\"Coins_pagination__-qiwy\"};","import Chart from \"react-apexcharts\";\r\nimport { ApexOptions } from \"apexcharts\";\r\n\r\ninterface ChartCoinsProps {\r\n  data: Array<number>;\r\n}\r\nconst ChartCoins: React.FC<ChartCoinsProps> = ({ data }) => {\r\n  const options: ApexOptions = {\r\n    chart: {\r\n      animations: {\r\n        enabled: false,\r\n      },\r\n      id: \"area-datetime\",\r\n      type: \"area\",\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n      sparkline: {\r\n        enabled: true,\r\n      },\r\n    },\r\n    grid: {\r\n      show: false,\r\n    },\r\n    fill: {\r\n      type: \"gradient\",\r\n      gradient: {\r\n        type: \"vertical\",\r\n        opacityFrom: 0.1,\r\n        opacityTo: 0.7,\r\n        stops: [0, 100],\r\n      },\r\n    },\r\n    tooltip: {\r\n      enabled: true,\r\n      theme: \"dark\",\r\n      style: {\r\n        fontSize: \"12px\",\r\n        fontFamily: undefined,\r\n      },\r\n      x: {\r\n        show: false,\r\n      },\r\n      y: {\r\n        formatter: function (value) {\r\n          if (value > 5) {\r\n            return value.toFixed(2);\r\n          }\r\n          return value.toFixed(5);\r\n        },\r\n        title: {\r\n          formatter: (seriesName) => \"$\",\r\n        },\r\n      },\r\n      marker: {\r\n        show: false,\r\n      },\r\n    },\r\n\r\n    xaxis: {\r\n      type: \"numeric\",\r\n      labels: {\r\n        show: false,\r\n      },\r\n    },\r\n    yaxis: {\r\n      show: false,\r\n    },\r\n    stroke: {\r\n      show: true,\r\n      curve: \"straight\",\r\n      width: 2,\r\n    },\r\n  };\r\n  const series = [\r\n    {\r\n      name: \"price\",\r\n      type: \"area\",\r\n      data: data,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Chart\r\n      options={options}\r\n      series={series}\r\n      type=\"line\"\r\n      width=\"100%\"\r\n      height=\"60px\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default ChartCoins;\r\n","import React from \"react\";\r\nimport style from \"./Coins.module.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport ChartCoins from \"./Chart\";\r\nimport { useAppSelector } from \"../../../Store/hooks\";\r\nimport { removeFloatNull, setNumberFormat } from \"../../../utils/utils\";\r\n\r\n\r\nconst CoinsTableBody = () => {\r\n  const markets = useAppSelector((state) => state.crypto.markets);\r\n\r\n  const setClassName = (value: number) => {\r\n    return (value > 0) ? style.percentagePlus : style.percentageMinus;\r\n  };\r\n\r\n  return (\r\n    <>\r\n    {markets.map((coin) => (\r\n      <tr key={coin.id}>\r\n        <td>{coin.market_cap_rank}</td>\r\n        <td>\r\n          <NavLink to={`/crypto/coins/${coin.id}`} className={style.link}>\r\n            <img src={coin.image} alt={coin.name} height={30} width={30} />\r\n            <p>{coin.name}</p>\r\n            <p>{coin.symbol.toUpperCase()}</p>\r\n          </NavLink>\r\n        </td>\r\n        <td>{removeFloatNull(coin.current_price)} $</td>\r\n        <td className={setClassName(coin.price_change_percentage_1h_in_currency)}>\r\n          {coin.price_change_percentage_1h_in_currency?.toFixed(2)} %\r\n        </td>\r\n        <td className={setClassName(coin.price_change_percentage_24h_in_currency)}>\r\n          {coin.price_change_percentage_24h_in_currency?.toFixed(2)} %\r\n        </td>\r\n        <td className={setClassName(coin.price_change_percentage_7d_in_currency)}>\r\n          {coin.price_change_percentage_7d_in_currency?.toFixed(2)} %\r\n        </td>\r\n        <td>{setNumberFormat(coin.total_volume)} $</td>\r\n        <td>{setNumberFormat(coin.market_cap)} $</td>\r\n        <td>\r\n          <ChartCoins data={coin.sparkline_in_7d.price} />\r\n        </td>\r\n      </tr>\r\n    ))}\r\n    </>\r\n  )\r\n};\r\n\r\nexport default React.memo(CoinsTableBody);\r\n","import style from \"./Coins.module.scss\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport CoinsTableBody from \"./CoinsTableBody\";\r\nimport TablePagination from \"../../Common/TablePagination\";\r\nimport { fetchMarkets } from \"../../../Store/Reducers/cryptoSlice\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../Store/hooks\";\r\nimport NavCrypto from \"../NavCrypto\";\r\nimport { CryptoSkeleton } from \"../CryptoSkeleton\";\r\n\r\nconst Coins = () => {\r\n  const isLoading = useAppSelector((state) => state.crypto.isLoadingCrypto);\r\n  const dispatch = useAppDispatch();\r\n  const [page, setPage] = useState<number>(1);\r\n  const countCoins: number = 50;\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchMarkets(page));\r\n  }, [page]);\r\n\r\n  return (\r\n    <>\r\n      <NavCrypto />\r\n        {isLoading \r\n        ? <CryptoSkeleton /> \r\n        : <section className={`${style.table} ${style.tableCoins}`}> \r\n          <h1 className=\"hidden\">Cryptocurrencies</h1>\r\n          <Table hover variant=\"dark\">\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Coin</th>\r\n                <th>Price</th>\r\n                <th>1h</th>\r\n                <th>24h</th>\r\n                <th>7d</th>\r\n                <th>Total Volume</th>\r\n                <th>Market Capitalization</th>\r\n                <th>Last&nbsp;7&nbsp;days</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <CoinsTableBody />\r\n            </tbody>\r\n          </Table>\r\n          </section>\r\n        }\r\n        <div className={style.pagination}>\r\n          <TablePagination page={page} setPage={setPage} count={countCoins} />\r\n        </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Coins;\r\n","import style from \"../Crypto/Exchanges/Exchanges.module.scss\";\r\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\n\r\n\r\nexport const CryptoSkeleton = () => {\r\n  return (\r\n    <>\r\n      <SkeletonTheme baseColor=\"#2c2b2b\" highlightColor=\"#4d4d4d\">\r\n        <div className={style.table} style={{marginBottom: -17, marginTop: -1}}>\r\n          <div>\r\n           <Skeleton height={50} width={'100%'} />\r\n          </div>\r\n        </div>\r\n      </SkeletonTheme>\r\n      <SkeletonTheme baseColor=\"#121212\" highlightColor=\"#262626\">\r\n        <div className={style.table} style={{marginBottom: 15}}>\r\n          <div>\r\n           <Skeleton count={15} height={53} width={'100%'} />\r\n          </div>\r\n        </div>\r\n      </SkeletonTheme>\r\n    </>\r\n  );\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"iconTime\":\"NavCrypto_iconTime__I4Vhv\",\"hidden\":\"NavCrypto_hidden__tN0cv\",\"container\":\"NavCrypto_container__Wd1RQ\",\"navCrypto\":\"NavCrypto_navCrypto__C9pNy\",\"listLeft\":\"NavCrypto_listLeft__NSkYO\",\"leftLink\":\"NavCrypto_leftLink__Y2MD1\",\"arrow\":\"NavCrypto_arrow__v0AAw\",\"home\":\"NavCrypto_home__deF99\",\"currentPath\":\"NavCrypto_currentPath__sTRX4\",\"listCenter\":\"NavCrypto_listCenter__bfrWA\"};","import style from \"./NavCrypto.module.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport sprite from \"../../assets/images/icons.svg\";\r\n\r\nconst NavCrypto = () => {\r\n  let currentPath = window.location.hash;\r\n  const regexpCoins = /#\\/crypto\\//i;\r\n  const regexpSelectedCoin = /#\\/crypto\\/coins\\//i;\r\n  const isSelectedCoin = regexpSelectedCoin.test(currentPath);\r\n  currentPath = currentPath.replace(\r\n    isSelectedCoin ? regexpSelectedCoin : regexpCoins,\r\n    \"\"\r\n  );\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <div className={style.navCrypto}>\r\n        <ul className={style.listLeft}>\r\n          <li>\r\n            <NavLink to=\"/\" className={style.leftLink}>\r\n              <svg className={style.home}>\r\n                <use href={sprite + \"#home\"} />\r\n              </svg>\r\n              <svg className={style.arrow}>\r\n                <use href={sprite + \"#arrow_right\"} />\r\n              </svg>\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/crypto/coins\" className={style.leftLink}>\r\n              Crypto\r\n              <svg className={style.arrow}>\r\n                <use href={sprite + \"#arrow_right\"} />\r\n              </svg>\r\n            </NavLink>\r\n          </li>\r\n          <li className={isSelectedCoin ? \"\" : \"hidden\"}>\r\n            <NavLink to=\"/crypto/coins\" className={style.leftLink}>\r\n              Coins\r\n              <svg className={style.arrow}>\r\n                <use href={sprite + \"#arrow_right\"} />\r\n              </svg>\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <span className={style.currentPath}>{currentPath}</span>\r\n          </li>\r\n        </ul>\r\n        <ul className={style.listCenter}>\r\n          <li>\r\n            <NavLink to=\"/crypto/coins\" className={style.centerLink}>\r\n              Coins\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/crypto/exchanges\" className={style.centerLink}>\r\n              Exchanges\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/crypto/arbitrage\" className={style.centerLink}>\r\n              Arbitrage\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/crypto/converter\" className={style.centerLink}>\r\n              Converter\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavCrypto;\r\n","export const setNumberFormat = (number: number): string => new Intl.NumberFormat(\"ua-UA\").format(number);\r\nexport const removeFloatNull = (value: number): string => {\r\n  const regExp = new RegExp(/\\.?0*$/);\r\n  return value < 1000 ? String(value).replace(regExp, \"\") : setNumberFormat(value);\r\n};\r\nexport const numberToFixed2 = (number: number): number => {\r\n  if (number < 0.00000001) {\r\n    return (Math.trunc(number * 10000000000)) / 10000000000;\r\n  } else if (number < 0.000001) {\r\n    return (Math.trunc(number * 100000000)) / 100000000;\r\n  } else if (number < 0.0001) {\r\n    return (Math.trunc(number * 1000000)) / 1000000;\r\n  } else if (number < 0.01) {\r\n    return (Math.trunc(number * 10000)) / 10000;\r\n  }\r\n  return ((Math.trunc(number * 100)) / 100)\r\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","// extracted by mini-css-extract-plugin\nexport default {\"iconTime\":\"Exchanges_iconTime__NBobL\",\"hidden\":\"Exchanges_hidden__uYU1h\",\"table\":\"Exchanges_table__uW4Zi\",\"tableCoins\":\"Exchanges_tableCoins__gnOYL\",\"link\":\"Exchanges_link__sYGLk\",\"percentagePlus\":\"Exchanges_percentagePlus__B2f1-\",\"percentageMinus\":\"Exchanges_percentageMinus__LV62d\",\"pagination\":\"Exchanges_pagination__pd8z5\",\"tableExchanges\":\"Exchanges_tableExchanges__LnRmN\"};"],"names":["page","setPage","count","shape","onChange","event","style","marginBottom","options","chart","animations","enabled","id","type","toolbar","show","sparkline","grid","fill","gradient","opacityFrom","opacityTo","stops","tooltip","theme","fontSize","fontFamily","undefined","x","y","formatter","value","toFixed","title","seriesName","marker","xaxis","labels","yaxis","stroke","curve","width","series","name","data","height","CoinsTableBody","markets","useAppSelector","state","crypto","setClassName","map","coin","market_cap_rank","to","className","src","image","alt","symbol","toUpperCase","removeFloatNull","current_price","price_change_percentage_1h_in_currency","price_change_percentage_24h_in_currency","price_change_percentage_7d_in_currency","setNumberFormat","total_volume","market_cap","Chart","sparkline_in_7d","price","React","isLoading","isLoadingCrypto","dispatch","useAppDispatch","useState","useEffect","fetchMarkets","NavCrypto","CryptoSkeleton","Table","hover","variant","TablePagination","baseColor","highlightColor","marginTop","currentPath","window","location","hash","regexpSelectedCoin","isSelectedCoin","test","replace","href","sprite","number","Intl","NumberFormat","format","regExp","RegExp","String","numberToFixed2","Math","trunc","ref","bsPrefix","striped","bordered","borderless","size","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children"],"sourceRoot":""}