{"version":3,"file":"static/js/830.0801bfc8.chunk.js","mappings":"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","sources":["Components/Crypto/Coins/Chart.tsx","Components/Crypto/Coins/CoinsTableBody.tsx","webpack://crypto-project/./src/Components/Crypto/Coins/SelectedCoin.module.scss?b69c","Components/Crypto/Coins/SelectedCoinChart.tsx","Components/Crypto/Coins/SelectedCoin.tsx","webpack://crypto-project/./src/Components/Crypto/NavCrypto.module.scss?f0af","Components/Crypto/NavCrypto.tsx","../node_modules/react-bootstrap/esm/ElementChildren.js","../node_modules/react-bootstrap/esm/ProgressBar.js","webpack://crypto-project/./src/Components/Crypto/Coins/Coins.module.scss?d27d"],"sourcesContent":["import Chart from \"react-apexcharts\";\r\nimport { ApexOptions } from \"apexcharts\";\r\n\r\ninterface ChartCoinsProps {\r\n  data: Array<number>;\r\n}\r\nconst ChartCoins: React.FC<ChartCoinsProps> = ({ data }) => {\r\n  const options: ApexOptions = {\r\n    chart: {\r\n      animations: {\r\n        enabled: false,\r\n      },\r\n      id: \"area-datetime\",\r\n      type: \"area\",\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n      sparkline: {\r\n        enabled: true,\r\n      },\r\n    },\r\n    grid: {\r\n      show: false,\r\n    },\r\n    fill: {\r\n      type: \"gradient\",\r\n      gradient: {\r\n        type: \"vertical\",\r\n        opacityFrom: 0.1,\r\n        opacityTo: 0.7,\r\n        stops: [0, 100],\r\n      },\r\n    },\r\n    tooltip: {\r\n      enabled: true,\r\n      theme: \"dark\",\r\n      style: {\r\n        fontSize: \"12px\",\r\n        fontFamily: undefined,\r\n      },\r\n      x: {\r\n        show: false,\r\n      },\r\n      y: {\r\n        formatter: function (value) {\r\n          if (value > 5) {\r\n            return value.toFixed(2);\r\n          }\r\n          return value.toFixed(5);\r\n        },\r\n        title: {\r\n          formatter: (seriesName) => \"$\",\r\n        },\r\n      },\r\n      marker: {\r\n        show: false,\r\n      },\r\n    },\r\n\r\n    xaxis: {\r\n      type: \"numeric\",\r\n      labels: {\r\n        show: false,\r\n      },\r\n    },\r\n    yaxis: {\r\n      show: false,\r\n    },\r\n    stroke: {\r\n      show: true,\r\n      curve: \"straight\",\r\n      width: 2,\r\n    },\r\n  };\r\n  const series = [\r\n    {\r\n      name: \"price\",\r\n      type: \"area\",\r\n      data: data,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Chart\r\n      options={options}\r\n      series={series}\r\n      type=\"line\"\r\n      width=\"100%\"\r\n      height=\"60px\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default ChartCoins;\r\n","import React from \"react\";\r\nimport style from \"./Coins.module.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport ChartCoins from \"./Chart\";\r\nimport { useAppSelector } from \"../../../Store/hooks\";\r\n\r\n\r\nexport const parseNumber = (number: number) => new Intl.NumberFormat(\"ua-UA\").format(number);\r\nexport const parseValue = (value: number) => {\r\n  const regExp = new RegExp(/\\.?0*$/);\r\n  return value < 1000 ? String(value).replace(regExp, \"\") : parseNumber(value);\r\n};\r\nexport const setClassName = (value: number) => {\r\n  return value > 0 ? style.percentagePlus : style.percentageMinus;\r\n};\r\n\r\n\r\n\r\nconst CoinsTableBody = () => {\r\n  const markets = useAppSelector((state) => state.crypto.markets);\r\n\r\n  return (\r\n    <>\r\n    {markets.map((coin) => (\r\n      <tr key={coin.id}>\r\n        <td>{coin.market_cap_rank}</td>\r\n        <td>\r\n          <NavLink to={`/crypto/coins/${coin.id}`} className={style.link}>\r\n            <img src={coin.image} alt={coin.name} height={30} width={30} />\r\n            <p>{coin.name}</p>\r\n            <p>{coin.symbol.toUpperCase()}</p>\r\n          </NavLink>\r\n        </td>\r\n        <td>{parseValue(coin.current_price)} $</td>\r\n        <td className={setClassName(coin.price_change_percentage_1h_in_currency)}>\r\n          {coin.price_change_percentage_1h_in_currency?.toFixed(2)} %\r\n        </td>\r\n        <td className={setClassName(coin.price_change_percentage_24h_in_currency)}>\r\n          {coin.price_change_percentage_24h_in_currency?.toFixed(2)} %\r\n        </td>\r\n        <td className={setClassName(coin.price_change_percentage_7d_in_currency)}>\r\n          {coin.price_change_percentage_7d_in_currency?.toFixed(2)} %\r\n        </td>\r\n        <td>{parseNumber(coin.total_volume)} $</td>\r\n        <td>{parseNumber(coin.market_cap)} $</td>\r\n        <td>\r\n          <ChartCoins data={coin.sparkline_in_7d.price} />\r\n        </td>\r\n      </tr>\r\n    ))}\r\n    </>\r\n  )\r\n};\r\n\r\nexport default React.memo(CoinsTableBody);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"iconTime\":\"SelectedCoin_iconTime__V4jRz\",\"hidden\":\"SelectedCoin_hidden__I83JN\",\"coin\":\"SelectedCoin_coin__X3Uxn\",\"descriptionChart\":\"SelectedCoin_descriptionChart__97Ku9\",\"description\":\"SelectedCoin_description__6bK8-\",\"rank\":\"SelectedCoin_rank__T2fby\",\"imgName\":\"SelectedCoin_imgName__ZoaeZ\",\"pricePercentage\":\"SelectedCoin_pricePercentage__J0nUT\",\"progressBar\":\"SelectedCoin_progressBar__04Qnm\",\"lowHigh\":\"SelectedCoin_lowHigh__6HfiP\",\"marketCapInfo\":\"SelectedCoin_marketCapInfo__VCiwx\",\"chartContainer\":\"SelectedCoin_chartContainer__8bwzy\",\"chartButtons\":\"SelectedCoin_chartButtons__qIOCP\",\"coinInfo\":\"SelectedCoin_coinInfo__ueEqR\"};","import style from './SelectedCoin.module.scss'\r\nimport { useState } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { useAppSelector } from '../../../Store/hooks';\r\n\r\n\r\ninterface ApexChartProps {\r\n  setDays: (e: number | 'max') => void;\r\n}\r\n\r\nconst ApexChart: React.FC<ApexChartProps> = ({setDays}) => {\r\n\r\n  const selectedCoinMarketChart = useAppSelector((state) => state.crypto.selectedCoinMarketChart);\r\n  const marketChart = selectedCoinMarketChart.prices\r\n\r\n  const parseNumber = (number: number) => new Intl.NumberFormat(\"ua-UA\").format(number);\r\n  const [chartTime, setChartTime] = useState<number | 'max'>(30)\r\n  \r\n  const series = [\r\n    {\r\n      data: marketChart,\r\n    },\r\n  ]\r\n  const options = {\r\n    chart: {\r\n      id: \"area-datetime\",\r\n      type: \"area\",\r\n    },\r\n    yaxis: {\r\n    tickAmount: 6,\r\n    labels: {\r\n        show: true,\r\n        align: 'right',\r\n        style: {\r\n            colors: '#eaeaea',\r\n            fontSize: '12px',\r\n            fontWeight: 400,\r\n        },\r\n        formatter: (value: number) => {\r\n          if (value === 0) {\r\n            return 0\r\n          } else if (value < 1) {\r\n            return value.toFixed(6)\r\n          } else if (value > 1 && value < 100) {\r\n            return value.toFixed(2)\r\n          }\r\n          return parseNumber(value)\r\n        },\r\n    },\r\n    },\r\n    xaxis: {\r\n      show: true,\r\n      type: \"datetime\",\r\n      labels: {\r\n        style: {\r\n          colors: '#eaeaea',\r\n          fontSize: '12px',\r\n          fontFamily: 'Helvetica, Arial, sans-serif',\r\n          fontWeight: 400,\r\n        },\r\n      }\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    markers: {\r\n      size: 0,\r\n      style: \"hollow\",\r\n    },\r\n    stroke: {\r\n      show: true,\r\n      curve: \"straight\",\r\n      lineCap: \"butt\",\r\n      width: 2,\r\n      dashArray: 0,\r\n    },\r\n    tooltip: {\r\n      enabled: true,\r\n      theme: \"dark\",\r\n      style: {\r\n        fontSize: \"12px\",\r\n        fontFamily: undefined,\r\n      },\r\n      x: {\r\n        format: \"dd MMM yyyy\",\r\n      },\r\n      y: {\r\n        formatter: function (value:number) {\r\n          if (value > 5) {\r\n            return value.toFixed(2);\r\n          }\r\n          return value.toFixed(5);\r\n        },\r\n        title: {\r\n          formatter: () => \"$\",\r\n        },\r\n      },\r\n    },\r\n    fill: {\r\n      type: \"gradient\",\r\n      gradient: {\r\n        type: \"vertical\",\r\n        shadeIntensity: 0,\r\n        opacityFrom: 0.1,\r\n        opacityTo: 0.7,\r\n        stops: [0, 100],\r\n      },\r\n    },\r\n  }\r\n\r\n    return (\r\n      <div className={style.chartTools}>\r\n        <div className={style.chartButtons}>\r\n          <button onClick={() => setDays(1)} >1d</button>\r\n          <button onClick={() => setDays(7)} >7d</button>\r\n          <button onClick={() => setDays(30)} >1m</button>\r\n          <button onClick={() => setDays(183)} >6m</button>\r\n          <button onClick={() => setDays(365)} >1y</button>\r\n          <button onClick={() => setDays('max')} >All</button>\r\n          <span className={style.inputDays}>\r\n            <input type='number' placeholder='Days' onChange={(e) => setChartTime(Number(e.target.value))}/>\r\n            <button onClick={() => setDays(chartTime)}>Show</button>\r\n          </span>\r\n        </div>\r\n\r\n          <ReactApexChart\r\n            options={options}\r\n            series={series}\r\n            type=\"area\"\r\n            height={'300vw'}\r\n          />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ApexChart;\r\n","import style from \"./SelectedCoin.module.scss\";\r\nimport s from \"../NavCrypto.module.scss\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport SelectedCoinMarketChart from \"./SelectedCoinChart\";\r\nimport {\r\n  fetchCoinDescription,\r\n  fetchSelectedCoinMarketChart,\r\n  fetchMarkets,\r\n  removeCoinDescription,\r\n  removeMarketChart,\r\n} from \"../../../Store/Reducers/cryptoSlice\";\r\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\r\nimport { parseNumber, setClassName } from \"./CoinsTableBody\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../Store/hooks\";\r\nimport NavCrypto from \"../NavCrypto\";\r\n\r\n\r\nconst SelectedCoin = () => {\r\n  const { coinId } = useParams();\r\n  const { markets, coinDescription } = useAppSelector((state) => state.crypto);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [days, setDays] = useState<number | \"max\">(30);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchSelectedCoinMarketChart([coinId, days]));\r\n    return () => {\r\n      dispatch(removeMarketChart());\r\n    };\r\n  }, [days]);\r\n\r\n  useEffect(() => {\r\n    if (!coin) {\r\n      dispatch(fetchMarkets());\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCoinDescription(coinId));\r\n    return () => {\r\n      dispatch(removeCoinDescription());\r\n    };\r\n  }, []);\r\n\r\n  const coin = markets.find((item) => item.id === coinId);\r\n  const coinDescWithoutTags =\r\n    coinDescription &&\r\n    coinDescription.replace(/<a\\s+href=\"(.*?)\">.*?<\\/a>/g, \"\");\r\n\r\n  if (coin) {\r\n    return (\r\n      <>\r\n      <NavCrypto />\r\n      <section className={style.coin}>\r\n        <div className={style.descriptionChart}>\r\n          <div className={style.description}>\r\n            <p className={style.rank}>Rank #{coin.market_cap_rank}</p>\r\n            <div className={style.imgName}>\r\n              <img src={coin.image} width={55} height={55} alt={coin.name} />\r\n              <p>{`${coin.name} (${coin.symbol.toUpperCase()})`}</p>\r\n            </div>\r\n            <div className={style.pricePercentage}>\r\n              <div>{coin.current_price} $</div>\r\n              <div className={setClassName(coin.price_change_percentage_24h)}>\r\n                {coin.price_change_percentage_24h.toFixed(2)}%\r\n              </div>\r\n            </div>\r\n            <div className={style.progressBar}>\r\n              <ProgressBar\r\n                now={coin.current_price}\r\n                min={coin.low_24h}\r\n                max={coin.high_24h}\r\n              />\r\n            </div>\r\n            <div className={style.lowHigh}>\r\n              <div>\r\n                {coin.low_24h > coin.current_price\r\n                  ? coin.current_price\r\n                  : coin.low_24h}{\" \"}\r\n                $\r\n              </div>\r\n              <div>24h</div>\r\n              <div>\r\n                {coin.high_24h < coin.current_price\r\n                  ? coin.current_price\r\n                  : coin.high_24h}{\" \"}\r\n                $\r\n              </div>\r\n            </div>\r\n\r\n            <div className={style.marketCapInfo}>\r\n              {coin.market_cap && (\r\n                <div>\r\n                  <p>Market Capitalization:</p>\r\n                  <div>{parseNumber(coin.market_cap)} $</div>\r\n                </div>\r\n              )}\r\n              {coin.total_volume && (\r\n                <div>\r\n                  <p>Trading Volume 24h:</p>\r\n                  <div>{parseNumber(coin.total_volume)} $</div>\r\n                </div>\r\n              )}\r\n              {coin.fully_diluted_valuation && (\r\n                <div>\r\n                  <p>Fully diluted valuation:</p>\r\n                  <div>{parseNumber(coin.fully_diluted_valuation)} $</div>\r\n                </div>\r\n              )}\r\n              {coin.circulating_supply && (\r\n                <div>\r\n                  <p>Circulating Supply:</p>\r\n                  <div>\r\n                    {parseNumber(+coin.circulating_supply.toFixed(0))} $\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {coin.total_supply && (\r\n                <div>\r\n                  <p>Total Supply:</p>\r\n                  <div>{parseNumber(+coin.total_supply.toFixed(0))} $</div>\r\n                </div>\r\n              )}\r\n              {coin.max_supply && (\r\n                <div>\r\n                  <p>Max Supply:</p>\r\n                  <div>{parseNumber(coin.max_supply)} $</div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className={style.chartContainer}>\r\n            <SelectedCoinMarketChart setDays={setDays} />\r\n          </div>\r\n        </div>\r\n        <p className={style.coinInfo}>{coinDescWithoutTags}</p>\r\n      </section>\r\n      </>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default SelectedCoin;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"iconTime\":\"NavCrypto_iconTime__I4Vhv\",\"hidden\":\"NavCrypto_hidden__tN0cv\",\"navCrypto\":\"NavCrypto_navCrypto__C9pNy\",\"listLeft\":\"NavCrypto_listLeft__NSkYO\",\"leftLink\":\"NavCrypto_leftLink__Y2MD1\",\"arrow\":\"NavCrypto_arrow__v0AAw\",\"home\":\"NavCrypto_home__deF99\",\"currentPath\":\"NavCrypto_currentPath__sTRX4\",\"listCenter\":\"NavCrypto_listCenter__bfrWA\"};","import style from \"./NavCrypto.module.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport sprite from \"../../assets/images/icons.svg\";\r\n\r\nconst NavCrypto = () => {\r\n  let currentPath = window.location.pathname;\r\n  const regexpCoins = /\\/crypto\\//i;\r\n  const regexpSelectedCoin = /\\/crypto\\/coins\\//i;\r\n  const isSelectedCoin = regexpSelectedCoin.test(currentPath);\r\n  currentPath = currentPath.replace(isSelectedCoin ? regexpSelectedCoin : regexpCoins, \"\");\r\n\r\n  return (\r\n    <div className={style.navCrypto}>\r\n      <ul className={style.listLeft}>\r\n        <li>\r\n          <NavLink to=\"/\" className={style.leftLink}>\r\n            <svg className={style.home}>\r\n              <use href={sprite + \"#home\"} />\r\n            </svg>\r\n            <svg className={style.arrow}>\r\n              <use href={sprite + \"#arrow_right\"} />\r\n            </svg>\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/crypto/coins\" className={style.leftLink}>\r\n            Crypto \r\n            <svg className={style.arrow}>\r\n              <use href={sprite + \"#arrow_right\"} />\r\n            </svg>\r\n          </NavLink>\r\n        </li>\r\n        <li className={isSelectedCoin ? \"\" : \"hidden\"}>\r\n          <NavLink to=\"/crypto/coins\" className={style.leftLink}>\r\n            Coins \r\n            <svg className={style.arrow}>\r\n              <use href={sprite + \"#arrow_right\"} />\r\n            </svg>\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <span className={style.currentPath}>{currentPath}</span>\r\n        </li>\r\n      </ul>\r\n      <ul className={style.listCenter}>\r\n        <li>\r\n          <NavLink to=\"/crypto/coins\" className={style.centerLink}>Coins</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/crypto/exchanges\" className={style.centerLink}>Exchanges</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/crypto/arbitrage\" className={style.centerLink}>Arbitrage</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/crypto/converter\" className={style.centerLink}>Converter</NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavCrypto;\r\n","import * as React from 'react';\n/**\n * Iterates through children that are typically specified as `props.children`,\n * but only maps over children that are \"valid elements\".\n *\n * The mapFunction provided index will be normalised to the components mapped,\n * so an invalid component would not increase the index.\n *\n */\n\nfunction map(children, func) {\n  let index = 0;\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? func(child, index++) : child);\n}\n/**\n * Iterates through children that are \"valid elements\".\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child with the index reflecting the position relative to \"valid components\".\n */\n\n\nfunction forEach(children, func) {\n  let index = 0;\n  React.Children.forEach(children, child => {\n    if ( /*#__PURE__*/React.isValidElement(child)) func(child, index++);\n  });\n}\n/**\n * Finds whether a component's `children` prop includes a React element of the\n * specified type.\n */\n\n\nfunction hasChildOfType(children, type) {\n  return React.Children.toArray(children).some(child => /*#__PURE__*/React.isValidElement(child) && child.type === type);\n}\n\nexport { map, forEach, hasChildOfType };","import classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\n\nconst defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  visuallyHidden: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\n\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild,\n  ...props\n}, ref) => {\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;","// extracted by mini-css-extract-plugin\nexport default {\"iconTime\":\"Coins_iconTime__zJ4BK\",\"hidden\":\"Coins_hidden__02BC-\",\"table\":\"Coins_table__PR9uh\",\"tableCoins\":\"Coins_tableCoins__dbVk3\",\"link\":\"Coins_link__yAojc\",\"percentagePlus\":\"Coins_percentagePlus__jkipC\",\"percentageMinus\":\"Coins_percentageMinus__VR4Pb\",\"pagination\":\"Coins_pagination__-qiwy\"};"],"names":["options","chart","animations","enabled","id","type","toolbar","show","sparkline","grid","fill","gradient","opacityFrom","opacityTo","stops","tooltip","theme","style","fontSize","fontFamily","undefined","x","y","formatter","value","toFixed","title","seriesName","marker","xaxis","labels","yaxis","stroke","curve","width","series","name","data","height","parseNumber","number","Intl","NumberFormat","format","parseValue","regExp","RegExp","String","replace","setClassName","CoinsTableBody","markets","useAppSelector","state","crypto","map","coin","market_cap_rank","to","className","src","image","alt","symbol","toUpperCase","current_price","price_change_percentage_1h_in_currency","price_change_percentage_24h_in_currency","price_change_percentage_7d_in_currency","total_volume","market_cap","Chart","sparkline_in_7d","price","React","setDays","marketChart","selectedCoinMarketChart","prices","useState","chartTime","setChartTime","tickAmount","align","colors","fontWeight","dataLabels","markers","size","lineCap","dashArray","shadeIntensity","onClick","placeholder","onChange","e","Number","target","coinId","useParams","coinDescription","dispatch","useAppDispatch","days","useEffect","fetchSelectedCoinMarketChart","removeMarketChart","fetchMarkets","fetchCoinDescription","removeCoinDescription","find","item","coinDescWithoutTags","NavCrypto","price_change_percentage_24h","ProgressBar","now","min","low_24h","max","high_24h","fully_diluted_valuation","circulating_supply","total_supply","max_supply","currentPath","window","location","pathname","regexpSelectedCoin","isSelectedCoin","test","href","sprite","children","func","index","child","forEach","getPercentage","percentage","Math","round","renderProgressBar","ref","label","visuallyHidden","striped","animated","variant","bsPrefix","props","_jsx","role","classNames","isChild","useBootstrapPrefix","wrapperProps","cloneElement","displayName","defaultProps"],"sourceRoot":""}