{"version":3,"file":"static/js/506.b8a30ecf.chunk.js","mappings":"+OAwDA,UA5Cc,WACZ,OAA0CA,EAAAA,EAAAA,GAJjB,iBAIoE,IAAG,eAAzFC,EAAa,KAAEC,EAAgB,KAEtC,GAAqCC,EAAAA,EAAAA,IAAe,SAACC,GAAK,OAAKA,EAAMC,MAAM,IAAnEC,EAAe,EAAfA,gBAAiBC,EAAO,EAAPA,QACnBC,GAAWC,EAAAA,EAAAA,KACjB,GAAwBC,EAAAA,EAAAA,UAAiB,GAAE,eAApCC,EAAI,KAAEC,EAAO,KACpB,GAA0CF,EAAAA,EAAAA,WAAkB,GAAM,eAA3DG,EAAa,KAAEC,EAAgB,KAEhCC,GAAaC,EAAAA,EAAAA,QAA2B,OAE9CC,EAAAA,EAAAA,YAAU,WACRT,GAASU,EAAAA,EAAAA,IAAaP,GACxB,GAAG,CAACA,IAUJ,OACE,iCACE,qBAASQ,UAAS,UAAKC,EAAAA,EAAAA,MAAW,YAAIA,EAAAA,EAAAA,YAAmB,WACvD,eAAID,UAAWC,EAAAA,EAAAA,YAAmBC,IAAKN,EAAW,SAAC,sBAGnD,SAAC,IAAa,CACZO,UAAWhB,EACXC,QAASA,EACTN,cAAeA,EACfsB,cAdc,WACpBT,GAAiB,EACnB,EAaQU,oBAnBoB,SAACC,GAC3BvB,EAAiBuB,EACnB,QAoBI,gBAAKN,UAAWC,EAAAA,EAAAA,WAAiB,UAC/B,SAAC,KAAe,CAACT,KAAMA,EAAMC,QAASA,EAASc,MAvCnC,GAuCuDL,IAAKN,OAE1E,SAAC,IAAS,CAACF,cAAeA,EAAeC,iBAAkBA,EAAkBa,SAAO,MAG1F,C","sources":["pages/Crypto/Coins/Coins.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react'\r\nimport { TablePagination } from 'Components/Common'\r\nimport { fetchMarkets } from 'Store/Reducers/cryptoSlice'\r\nimport { useAppDispatch, useAppSelector } from 'hooks/redux-hooks'\r\nimport { ModalAuth } from 'Components/Auth/ModalAuth'\r\nimport { useLocalStorageState } from 'hooks/useStorage'\r\nimport { CoinTableHead } from './CoinTableHead'\r\nimport style from './Coins.module.scss'\r\n\r\nconst SELECTED_COINS_KEY = 'selected-coins'\r\nconst COUNT_COINS = 50\r\n\r\nconst Coins = () => {\r\n  const [selectedCoins, setSelectedCoins] = useLocalStorageState<string[]>(SELECTED_COINS_KEY, [])\r\n\r\n  const { isLoadingCrypto, markets } = useAppSelector((state) => state.crypto)\r\n  const dispatch = useAppDispatch()\r\n  const [page, setPage] = useState<number>(1)\r\n  const [modalAuthShow, setModalAuthShow] = useState<boolean>(false)\r\n\r\n  const headingRef = useRef<HTMLHeadingElement>(null)\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchMarkets(page))\r\n  }, [page])\r\n\r\n  const setNewSelectedCoins = (newArr: string[]) => {\r\n    setSelectedCoins(newArr)\r\n  }\r\n\r\n  const openModalAuth = () => {\r\n    setModalAuthShow(true)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section className={`${style.table} ${style.tableCoins}`}>\r\n        <h1 className={style.tableHeader} ref={headingRef}>\r\n          Cryptocurrencies\r\n        </h1>\r\n        <CoinTableHead\r\n          isLoading={isLoadingCrypto}\r\n          markets={markets}\r\n          selectedCoins={selectedCoins}\r\n          openModalAuth={openModalAuth}\r\n          setNewSelectedCoins={setNewSelectedCoins}\r\n        />\r\n      </section>\r\n      <div className={style.pagination}>\r\n        <TablePagination page={page} setPage={setPage} count={COUNT_COINS} ref={headingRef} />\r\n      </div>\r\n      <ModalAuth modalAuthShow={modalAuthShow} setModalAuthShow={setModalAuthShow} isLogin />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Coins\r\n"],"names":["useLocalStorageState","selectedCoins","setSelectedCoins","useAppSelector","state","crypto","isLoadingCrypto","markets","dispatch","useAppDispatch","useState","page","setPage","modalAuthShow","setModalAuthShow","headingRef","useRef","useEffect","fetchMarkets","className","style","ref","isLoading","openModalAuth","setNewSelectedCoins","newArr","count","isLogin"],"sourceRoot":""}